#!/usr/bin/env r

doc<-"

=head1 NAME

createVenn.R - prepare Venn diagrams for traits shared between covariates

=head1 SYNOPSIS

to be started from within the R shell with no parameters

=head1 DESCRIPTION

This script plots the chromosomal location of the QTL 
against the chromosomal location of the gene it affects.

=head1 AUTHORS

Steffen Moeller <moeller@inb.uni-luebeck.de>,
ME<eacute>lanie ThessE<eacute>n Hedreul,
Maja Jagodic E<#263>

=head1 COPYRIGHT

University of LE<uuml>beck and Karolinska Institute, Stockholm

=cut

"

library(RMySQL)
library(getopt)

library(gplots) # for Venn diagrams

# cat("I was here 0.\n")

opt = getopt(matrix(c(
    'verbose'    , 'v', 2, "integer",
    'help'       , 'h', 0, "logical",
    'MeanMin'    , 'm', 1, "double",
    'LODmin'     , 'l', 1, "double",
    'interactive', 'i', 0, "logical",
    'format'     , 'f', 1, "character",
    'covariates' , 'c', 1, "character",
    'output'     , 'o', 1, "character"
   ),ncol=4,byrow=TRUE),
   debug=TRUE)

# for manual interaction in shell: 
# con <- dbConnect(MySQL(),user="qtl", password="", dbname="eQTL_Stockholm", host="pc15.inb.uni-luebeck.de")

con <- dbConnect(MySQL(),user="DATABASEEQTLUSER", password="", dbname="DATABASEEQTLNAME", host="DATABASEHOSTLOCAL")

#covariates<-c('','eae_add','sud_add','dud_add','wl0_add','D12G1_add','D12G2B_add','D12G2C_add','D35G1_add','D35G2B_add','D35G2C_add','t12p_add','t35p_add')
if (is.null(opt$covariates)) {
	cat("Falling back to default covariates.\n")
	covariates<-c('eae_add','sud_add','dud_add','wl0_add','D12G1_add')
} else if (5<length(covariates)) {
	q(status=1);
} else {
	covariates <- opt$covariates
}

cat(paste("Working with the following covariates: ",paste(covariates, collapse="; "),"\n",sep=""))

rs<-dbGetQuery(con, paste(
	"SELECT Locus, Trait, covariates, chromosome, cis, cis_dist,cMorgan_Peak from qtl where covariates in ('",
	paste(covariates,collapse="','",sep=""),
	"') and ((cis=1 and cis_dist>20000000) or cis=0) and LOD >= 3.9",sep=""))
#rs<-dbGetQuery(con, "SELECT Locus, Trait, covariates, chromosome, cis, cis_dist,cMorgan_Peak from qtl where covariates in ('','eae_add','sud_add','dud_add','wl0_add','D12G1_add','D12G2B_add','D12G2C_add','D35G1_add','D35G2B_add','D35G2C_add','t12p_add','t35p_add') and cis=1 and cis_dist<=20000000 and LOD >= 3.9")



#exakte lokus Ã¼bereinstimmung
loc.trait<-apply(rs,1,function(x){return(paste(x[1],x[2],sep="_"))})

loc.trait.covariate<-sapply(covariates,function(covar){
	return(loc.trait[rs[,3]==covar])
},USE.NAMES=TRUE)

if (FALSE) {
	none<-loc.trait[which(rs[,3]=="")]
	eae<-loc.trait[which(rs[,3]=="eae_add")]
	sud<-loc.trait[which(rs[,3]=="sud_add")]
	dud<-loc.trait[which(rs[,3]=="dud_add")]
	wl0<-loc.trait[which(rs[,3]=="wl0_add")]
	D12G1<-loc.trait[which(rs[,3]=="D12G1_add")]
	D12G2B<-loc.trait[which(rs[,3]=="D12G2B_add")]
	D12G2C<-loc.trait[which(rs[,3]=="D12G2C_add")]
	D35G1<-loc.trait[which(rs[,3]=="D35G1_add")]
	D35G2B<-loc.trait[which(rs[,3]=="D35G2B_add")]
	D35G2C<-loc.trait[which(rs[,3]=="D35G2C_add")]
	t12p<-loc.trait[which(rs[,3]=="t12p_add")]
	t35p<-loc.trait[which(rs[,3]=="t35p_add")]
}
#venn diagramme malen
#venn(list(D12G1,D12G2B,D12G2C,t12p))
#x11()
#venn(list(D35G1,D35G2B,D35G2C,t35p))

rs.map<-dbGetQuery(con, "SELECT marker, cmorgan_rqtl, chr, bp FROM map ORDER BY chr,cmorgan_rqtl")
rs.map.cM2bp <- sapply(unique(rs.map[,"chr"]),function(X){
				print(paste("Chr:",X))
				subset<-(rs.map[,"chr"]==X)
				#print(which(subset))
				data.pairs.relevant<-rs.map[subset,c("cmorgan_rqtl","bp")]
				print(data.pairs.relevant)
				approxfun(data.pairs.relevant)
			},USE.NAMES=TRUE)

rs.map.bp2cM <- sapply(unique(rs.map[,"chr"]),function(X){
				print(paste("Chr:",X))
				subset<-(rs.map[,"chr"]==X)
				#print(which(subset))
				data.pairs.relevant<-rs.map[subset,c("bp","cmorgan_rqtl")]
				print(data.pairs.relevant)
				approxfun(data.pairs.relevant)
			},USE.NAMES=TRUE)


dbDisconnect(con)
#read disease qtl

if (FALSE) {
	disease_qtl<-read.table("/nfshome/grimm/gitEqtlRepo/data/xls/DAPVGdisease_loci_T_Olsson_090320.csv", sep=",",header=T)
	isInQTL<-function(pos,chr,disease_qtl){
		disease_qtl_chr<-disease_qtl[which(disease_qtl$RNO==chr),]
		positions<-strsplit(as.character(disease_qtl_chr[,"Mb.positions"]),"-")
		value<-unlist(lapply(positions,function(x){return(as.numeric(x[1])*1000000<=pos && pos<=as.numeric(x[2])*1000000)}))
		if(sum(value)>=1){
			return(1)
		}
		return(0)
	}
}

# For testing:
# disease_qtl<-dbGetQuery(con, paste("SELECT name, chr, start_bps, stop_bps, species",
#                                    "FROM qtl.eae_qtl",
# 			           "WHERE species='Rattus_norvegicus'",
# 			           "AND start_bps IS NOT NULL and stop_bps IS NOT NULL",sep=" "));

disease_qtl<-dbGetQuery(con, paste("SELECT name, chr, start_bps, stop_bps, species",
                                   "FROM qtl.eae_qtl",
				   "WHERE species='ENSEMBLSPECIESSEARCHURL'",
				     "AND start_bps IS NOT NULL and stop_bps IS NOT NULL",sep=" "));
isInQTL<-function(pos,chr) {
	s<-disease_qtl[,"chr"]==chr;
	a<-(disease_qtl[,"start_bps"]<=pos)
	b<-(disease_qtl[,"stop_bps"]>=pos)
	r<-s&a&b
	return(any(r))
}


#marker-trait dingens erstellen
marker.trait<-NULL
for(i in 1:nrow(rs)){
	locus<-rs$Locus[i]
	cm<-rs$cMorgan_Peak[i]
	#bp<-as.numeric(bp.position[i])
	bp<-rs.map.cM2bp(cm)
	inDiseaseQTL<-isInQTL(bp,rs$chromosome[i])
	if(sum(rs.map$marker==rs$Locus[i])==1){
		pos<-which(rs.map$marker==rs$Locus[i])
		if(pos<nrow(rs.map) && rs.map$chr[pos+1]==rs.map$chr[pos]){
				marker.trait.value<-c(paste(rs$Locus[i],rs.map$marker[pos+1],rs$Trait[i],sep="_"),rs$covariates[i],inDiseaseQTL)
		}
		else{
			marker.trait.value<-c(paste(rs$Locus[i],"end",rs$Trait[i],sep="_"),rs$covariates[i],inDiseaseQTL)
		}
		if(is.null(marker.trait)){
			marker.trait<-marker.trait.value
		}
		else{
			marker.trait<-rbind(marker.trait,marker.trait.value)
		}
		if(pos>1 && rs.map$chr[pos-1]==rs.map$chr[pos]){
				marker.trait.value<-c(paste(rs.map$marker[pos-1],rs$Locus[i],rs$Trait[i],sep="_"),rs$covariates[i],inDiseaseQTL)
		}
		else{
			marker.trait.value<-c(paste("begin",rs$Locus[i],rs$Trait[i],sep="_"),rs$covariates[i],inDiseaseQTL)
		}
		if(is.null(marker.trait)){
			marker.trait<-marker.trait.value
		}
		else{
			marker.trait<-rbind(marker.trait,marker.trait.value)
		}
	}
	else{
		rs.map.chr<-rs.map[which(rs.map$chr==rs$chromosome[i]),]
		pos<-sum(rs.map.chr$cmorgan_rqtl<cm)
		if(pos==0){
			marker.trait.value<-c(paste("begin",rs.map.chr$marker[1],rs$Trait[i],sep="_"),rs$covariates[i],inDiseaseQTL)
		}
		else if(pos==nrow(rs.map.chr)){
			marker.trait.value<-c(paste(rs.map.chr$marker[nrow(rs.map.chr)],"end",rs$Trait[i],sep="_"),rs$covariates[i],inDiseaseQTL)
		}
		else{
			marker.trait.value<-c(paste(rs.map.chr$marker[pos],rs.map.chr$marker[pos+1],rs$Trait[i],sep="_"),rs$covariates[i],inDiseaseQTL)
		}
		if(is.null(marker.trait)){
                        marker.trait<-marker.trait.value
                }
                else{
                        marker.trait<-rbind(marker.trait,marker.trait.value)
                }

	}

}



marker.trait.covariate<-sapply(covariates,function(covar){
	return(marker.trait[,3]==covar])
},USE.NAMES=TRUE)

if (FALSE) {
	none<-marker.trait[which(marker.trait[,2]==""),]
	eae<-marker.trait[which(marker.trait[,2]=="eae_add"),]
	sud<-marker.trait[which(marker.trait[,2]=="sud_add"),]
	dud<-marker.trait[which(marker.trait[,2]=="dud_add"),]
	wl0<-marker.trait[which(marker.trait[,2]=="wl0_add"),]
	D12G1<-marker.trait[which(marker.trait[,2]=="D12G1_add"),]
	D12G2B<-marker.trait[which(marker.trait[,2]=="D12G2B_add"),]
	D12G2C<-marker.trait[which(marker.trait[,2]=="D12G2C_add"),]
	D35G1<-marker.trait[which(marker.trait[,2]=="D35G1_add"),]
	D35G2B<-marker.trait[which(marker.trait[,2]=="D35G2B_add"),]
	D35G2C<-marker.trait[which(marker.trait[,2]=="D35G2C_add"),]
	t12p<-marker.trait[which(marker.trait[,2]=="t12p_add"),]
	t35p<-marker.trait[which(marker.trait[,2]=="t35p_add"),]
	D35<-(D35G1[D35G1[,1] %in% D35G2C[D35G2C[,1] %in% D35G2B[D35G2B[,1] %in% t35p[,1],1],1],])
	D12<-(D12G1[D12G1[,1] %in% D12G2C[D12G2C[,1] %in% D12G2B[D12G2B[,1] %in% t12p[,1],1],1],])
}

#jetzt labeln
png("VennDiagrams/Trans/D12_intersection_trans.png")
venn(list(D12G1=D12G1[,1],D12G2B=D12G2B[,1],D12G2C=D12G2C[,1],t12p=t12p[,1]),label=list("1111"=paste("In QTL:",sum(as.numeric(D12[,3])),sep=" ")))
dev.off()
png("VennDiagrams/Trans/D35_intersection_trans.png")
venn(list(D35G1=D35G1[,1],D35G2B=D35G2B[,1],D35G2C=D35G2C[,1],t35p=t35p[,1]),label=list("1111"=paste("In QTL:",sum(as.numeric(D35[,3])),sep=" ")))
dev.off()

Dall<-D35[D35[,1] %in% D12[,1],]

eae_all<-eae[eae[,1] %in% sud[sud[,1] %in% dud[dud[,1] %in% wl0[wl0[,1] %in% Dall[,1],1],1],1],]
png("VennDiagrams/Trans/DiseaseCovariates_intersection_trans.png")
venn(list(eae=eae[,1],sud=sud[,1],dud=dud[,1],wl0=wl0[,1],IgG=Dall[,1]),label=list("11111"=paste("In QTL:",sum(as.numeric(eae_all[,3])),sep=" ")))
dev.off()
all<-none[none[,1] %in% eae_all[,1],]
none_single<-none[!(none[,1] %in% eae_all[,1]),]
eae_all_single<-eae_all[!(eae_all[,1] %in% none[,1]),]

png("VennDiagrams/Trans/DiseaseCovariates_transcript_intersection_trans.png")
venn(list(transcript=none[,1],disease_covariates=eae_all[,1]),label=list("11"=paste("In QTL:",sum(as.numeric(all[,3])),sep=" "),"10"=paste("In QTL:",sum(as.numeric(none_single[,3])),sep=" "),"01"=paste("In QTL:",sum(as.numeric(eae_all_single[,3])),sep=" ")))
dev.off()

