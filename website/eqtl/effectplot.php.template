<?php

	TEMPLATEWARNINGHASH

/*

=head1 effectplot

Display of strain differences on the expression levels. This can be shown only for individual marker (or QTL).
The default will hence be to have this page requested as an extension to the information shown on QTL with the locus directly specified.

It is planned to allow the script to perform a complete rerun of the QTL
and then show effect plots for all loci above a particular LOD score.
No permutation tests are then performed, i.e. a filtering for p-Values
not supported.

The interface shall also be usable to rerun the QTL with another (most CPU-intensive, possibly) method.

=over 4

=item LODmin 

defaulting to 3

=item method

defaulting to hk

=item covariates

not yet implemented

=item chromosomes

not yet implemented

=item location in classical disease qtl

not yet implemented

=back

=head1 AUTHORS

Steffen ME<ouml>ller <moeller@inb.uni-luebeck.de>,

=head1 COPYRIGHT

University of LE<uuml>beck, Germany, 2010

=cut

*/

	require_once("header.php");
	require_once("func_covariates.php");
	require_once("func_dbconfig.php"); // errorMessage
	require_once("func_selection.php"); // prints part of the HTML for forms

	show_small_header("EffectPlot",TRUE);

	$database="DATABASEEQTLNAME";
	include_once("func_connect.php");
	require_once("func_public_qtl.php");

	# fields that should appear
	$dataSelectionFieldsQTL = array(
		"traits","traitlist",
		"groups",
		"chromosome","cM",
		"chromosome2","cM2",
		"marker","marker2",
		"unit",
		"ensemblversion",
		"cM_within","LODmax","LODmin",
	/*
		"quantilemin","quantilemax",
		"qtl_covariates",
		"cqtl",
		"LODdiffmin","LODdiffmax",
		"PvalueMin","PvalueMax",
		"cM_Peak_Min","cM_Peak_Max",
		"MeanMin","MeanMax","SdMin","SdMax",
	*/
		"method",
		"find_marker",
		"cistrans",
		"condition"
	);

	#print_r($_GET);



	$accessible_fields_in_POST_or_GET = array_merge (
		array("submitted","direct","inlineImages","rerunAnalyses","verbose"),
		$dataSelectionFieldsQTL
	);

	foreach($accessible_fields_in_POST_or_GET as $vname)
	{
		if (isset($_POST[$vname])) {
			$$vname = $_POST[$vname];
			if (isset($_POST["debug"]) or isset($_GET["debug"])) {
				echo $vname."=".$$vname."\t";
			}
		}
		elseif(isset($_GET[$vname])) {
			$$vname = $_GET[$vname];
			if (isset($_POST["debug"]) or isset($_GET["debug"])) {
				echo $vname."=".$$vname."\t";
			}
		}
	}

	# transforming array of traits into comma separated string
	if (!empty($traitlist)) {
		if (is_array($traitlist)) {
			$traits=join(",",$traitlist);
		}
		else {
			$traits=$traitlist;
			$traitlist="";
		}
	}

	if (empty($submitted) and empty($direct)) {

		#
		#   S E T T I N G  O F  P A R A M E T E R S 
		#

		echo "<p>Use this form to learn about strain differences for singular loci.
		You specify the locus and see how strains differ in the degree that these
		have the gene expressed. You can either specify the marker name or specify
		the locus via its chr/cM pair. For interacting effects, one can also display
		the difference that a second locus has on the effect of the first.
		</p>
		<p>
		At some later stage this page will offer to perform a single QTL
		analysis on individual traits. It uses those insights to then show all
		effect plots for the LOD scores above the <i>LODmin</i>
		threshold.</p>";

		echo "<form action=effectplot.php method=post>\n";
		echo "<input type=hidden name=submitted value=1>\n";

		echo "<table><tr>"; # the table has only a single row

		echo "<td valign=top>"; # entry of typical filter attributes - left hand side

		echo "<table>\n";
		print_selection_form("figure_effectplot");
		//echo "<tr><th>Covariates of stored QTL</th><td>";
		//select_covariates_combinations(3);
		echo "<tr><td>&nbsp;</td><td></td></tr>\n";
		echo "<tr><td align=right><input type=submit></td>";
		echo "<td align=left><input type=reset></td>";
		echo "<td colspan=2>";
		echo "&nbsp;&nbsp;&nbsp;<input type=checkbox name=inlineImages value=1 />Inline Images";
		//echo "&nbsp;&nbsp;&nbsp;<input type=checkbox name=rerunAnalyses value=1 />Rerun previous analyses";
		echo "&nbsp;&nbsp;&nbsp;<input type=checkbox name=verbose value=1 />verbose";
		echo "</td></tr>\n";
		echo "</table>\n";

		if ("" == "this is not yet implemented") {
		  echo "</td>\n<td valign=top>";
		  select_from_public_qtls($linkLocal,TRUE);
		  echo "</td>";
		}
		echo "</tr>";
		echo "</table>";

		echo "</form>\n";

	}
	else {

		if (!empty($debug)) print_r($_POST);

		$err=array();

		if (empty($traits)) {
			$err[]="The traits for which to print effect plots have not been specified. "
				    ."Fill out the <a href=\"effectplot.php\">effectPlot form</a>.";
		}

		# scanone was now implemented.
		#if (empty($marker) and (!isset($cM) or empty($chromosome))) {
		#	$err[]="1<sup>st</sup> locus not specified, neither by marker name nor by chr:cM pair (current value $chromosome:$cM).";
		#}
		#else if (empty($marker2) and (!isset($cM2) or empty($chromosome2))) {
		#	if (!(empty($cM2) and empty($chromosome2))) {
		#		$err[]="Specification of 2<sup>nd</sup> locus incomplete, missing cM ($cM2) or chromosome ($chromosome2).";
		#	}
		#}

		if (0<count($err)) {
			echo "<p>Please fix:\n<ul>";
			foreach ($err as $e) {
				echo "<li>$e\n";
			}
			echo "</ul></p>";
			exit;
		}

		if ("Mbp"=="$unit") {
			include_once("func_conversion_ENSEMBLVERSION.php");
			# Need to convert Mbp to cM
			if (!empty($cM)) {
				$Mbp=$cM;
				$cM = bp2cM($chromosome,$Mbp*1000*1000);
				echo "1: Converted Mbp $Mbp to cM $cM<br>\n";
			}
			if (!empty($cM2)) {
				$Mbp2=$cM2;
				$cM2 = bp2cM($chromosome2,$Mbp2*1000*1000);
				echo "2: Converted Mbp $Mbp2 to cM $cM2<br>\n";
			}
		}

		$traitlist=preg_split("/,\s*/",$traits);

		if (1<count($traitlist)) {
			//echo "<h1>Effect Plots</h1>\n";
			foreach ($traitlist as $n=>$trait) {
				echo " <a href=\"#$trait\">$trait</a>";
			}
		}

		foreach ($traitlist as $trait) {

			if (1<count($traitlist)) {
				echo "<h2>Trait <i>$trait</$i></h2>\n";
			}
			else {
				echo "<h1>Effect Plot on trait <i>$trait</$i></h1>\n";
			}
		
			#
			# invocation of external R script
			#

			echo "cwd: " . getcwd() . "<br>\n";
			#print_r($_SERVER);

			if ($n>0) echo "<hr>";

			$attributes=array();

			$outputfilename = "tmp_images/effectplot_output";
			if (!empty($trait)) {
				$outputfilename .= "_trait_$trait";
				array_push($attributes,"--trait",$trait);
			}
			if (isset($LODmin))    {
				$outputfilename .= "_LODmin_$LODmin";
				array_push($attributes,"--LODmin",$LODmin);
			}
			if (!empty($LODmax))    {
				$outputfilename .= "_LODmax_$LODmax";
				array_push($attributes,"--LODmax",$LODmax);
			}
			if (!empty($chromosome)) {
				$outputfilename .= "_chromosome_$chromosome";
				array_push($attributes,"--chromosome1",$chromosome);
			}
			if (isset($cM) and "" != "$cM") {
				$outputfilename .= "_cM_$cM";
				array_push($attributes,"--cM1",$cM);
			}
			if (!empty($marker)) {
				$outputfilename .= "_marker_$marker";
				array_push($attributes,"--marker1",$marker);
			}
			if (!empty($chromosome2)) {
				$outputfilename .= "_chromosome2_$chromosome2";
				array_push($attributes,"--chromosome2",$chromosome2);
			}
			if (isset($cM2) and "" != "$cM2") {
				$outputfilename .= "_cM2_$cM2";
				array_push($attributes,"--cM2",$cM2);
			}
			if (!empty($marker2)) {
				$outputfilename .= "_marker2_$marker2";
				array_push($attributes,"--marker2",$marker2);
			}
			if (!empty($method)
			   and (empty($marker) and (empty($cM) or ""=="$cM" or empty($chromosome)))) {
				$outputfilename .= "_method_$method";
				array_push($attributes,"--method",$method);
			}

			if ("" != $cM or "" != "$cM2") {
				# decision how to map from genetic location to nearest marker
				if (empty($find_marker)) {
					$find_marker="marker";
				}
				$outputfilename .= "_findmarker_$find_marker";
				array_push($attributes,"--findmarker",$find_marker);
			}

			$rscript = getcwd() . "/../../scripts/analyses/effectplot.R";
			if (!file_exists($rscript)) {
			  errorMessage("R script '$rscript' not found.");
			}
			$cmd = "$rscript";
			$cmd .= " --format png";
			array_push($attributes,"--format","png");

			if (!empty($verbose)) {
			  $cmd .= " --verbose";
			  array_push($attributes,"--verbose",1);
			}
			$cmd .= " --output \"$outputfilename\"";
			array_push($attributes,"--output",'"'.$outputfilename.'"');
			$cmd = "$rscript ".join(" ",$attributes);
			
			if (file_exists($outputfilename."txt")) {
				if (!unlink($outputfilename."txt")) {
					errorMessage("Could not remove file '$outputfilename.txt");
					exit;
				}
			}

			if ($verbose) {
				echo "<p>executing '$cmd'</p><br />\n";
			}
		
			$t =  shell_exec($cmd);

			if ($verbose) {
				echo "<p>";
				echo "<pre>";
				#print_r($attributes);
				echo "<small>$t</small>\n";
				echo "</pre>";
				echo "</p>\n";
			}

			# show the output of the run
			if ($verbose) {
				echo "output file expected at "
					. "<a href=\"$outputfilename.txt\">$outputfilename.txt</a><br>\n";
			}

			if (file_exists("$outputfilename.txt")) {
				$myFile = "$outputfilename.txt";
				$fh = fopen($myFile, 'r');
				$theData = fread($fh, 200000);
				fclose($fh);
				echo $theData;
			}

			echo "<br><a href=\"".$outputfilename.".png\">$outputfilename.png</a>\n";

			if (!empty($inlineImages)) {
				echo "<IMG SRC=\"".$outputfilename.".png\" HEIGHT=\"100%\">\n";
			}
		}
	}
	include("footer.php");
?>
