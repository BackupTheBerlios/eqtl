<?php

	TEMPLATEWARNINGHASH

/*

=head1 xyplot

This script is similar to the regular scatter plots at first sight, but it is about the phenotypes of individuals, not about their loci. One can think about it as an abstraction of the effectplot, in that it allows to have arbitrary values shown on either axis, and eventually the colour and the form for a third and fourth parameter..

=over 4

=item to be done

=back

=head1 AUTHORS

Steffen ME<ouml>ller <moeller@inb.uni-luebeck.de>,

=head1 COPYRIGHT

University Clinics Schleswig-Holstein, Germany, 2010

=cut

*/

	require_once("header.php");
	require_once("func_covariates.php");
	require_once("func_selection.php"); // prints part of the HTML for forms

	show_small_header("XY plot of arbitrary phenotypic and genotypic data",TRUE);

	$database="DATABASEEQTLNAME";
	include_once("func_connect.php");
	require_once("func_public_qtl.php");
	require_once("func_phenotypes.php");
	require_once("func_markers.php");

	# fields that should appear
	$dataSelectionFieldsQTL = array(
	);

	// these are the four dimensions the system offers to show
	$dimensions=array("xaxis"=>"X-axis",
			  "yaxis"=>"Y-axis",
			  "colour"=>"Colouring of individuals",
			  "symbol"=>"Symbol for presentation");
	$dimension_types=array("trait"=>"Trait","phen"=>"Phen","marker"=>"Marker");

	# Adding all the field names to the array that will later
	# be iterated to check for _GET and _POST submissions
	foreach ($dimensions as $d=>$dd) {
		array_push($dataSelectionFieldsQTL,"selection_$d");
		array_push($dataSelectionFieldsQTL,"value_$d");
		foreach ($dimension_types as $dt=>$dtdt) {
			$varname=$d."_".$dt;
			#echo "<p>$varname</p>\n";
			array_push($dataSelectionFieldsQTL,$varname);
		}
	}


	# fields that are likely to appear and have a special interpretation
	# later as attributes passed to the wrapped application
	$presentationAttributes = array("main","sub",
					"display","format",
					"legend",
					"LODmax","LODmin","PvalueMax","PvalueMin",
					"imagewidth","imageheight",
					"hulllinewidth","hulllinetype",//"hulllinecolour",
					"axeslinewidth","axescolour","axeslinetype");



	$accessible_fields_in_POST_or_GET = array_merge (
		array("submitted","inlineImages","rerunAnalyses","verbose"),
		$dataSelectionFieldsQTL,
		$presentationAttributes
	);

	$phenotypes=list_phenotypes();
	$markers=list_markers();

	foreach($accessible_fields_in_POST_or_GET as $vname)
	{
		if (isset($_POST[$vname])) {
			$$vname = ltrim(rtrim($_POST[$vname]));
			if (isset($_POST["debug"]) or isset($_GET["debug"])) {
				echo $vname."=".$$vname."\t";
			}
		}
		elseif(isset($_GET[$vname])) {
			$$vname = ltrim(rtrim($_GET[$vname]));
			if (isset($_POST["debug"]) or isset($_GET["debug"])) {
				echo $vname."=".$$vname."\t";
			}
		}
	}

	if (empty($submitted)) {

		#
		#   S E T T I N G  O F  P A R A M E T E R S 
		#
		echo "<form action=xyplot.php method=post>\n";
		echo "<input type=hidden name=submitted value=1>\n";

		echo "<p>Please specify the data to be presented for each dimension:</p>\n";
		echo "<table>\n";
		$markers_mod=array_merge(
			array("most_sep_geometric"=>"Find most separating"),
			$markers
		);
		foreach ($dimensions as $parameter=>$parameter_text) {
			echo "<hr>\n";
			echo "<h3>";
			echo "$parameter_text</h3>";
			#echo "<hr>\n";
			echo "<table width='100%'>";
			echo "<tr>";
			echo "<td><h4>Selection</h4></td><td><h4>".join("</h4></td><td><h4>",$dimension_types)."</h4></td></tr>\n";
			echo "<tr>";
			echo "<td>On this Axis show:<br/>\n";
			$varname="selection_$parameter";
			echo "<select name=\"$varname\">\n";
			echo "<option value=ignore>don't show</option>\n";
			foreach ($dimension_types as $d=>$dd) {
				echo "<option value=$d";
				if (empty($$varname)) {
					if ("trait"==$d and ($parameter=="xaxis" or $parameter=="yaxis")) echo " selected";
					if ("phen"==$d and $parameter=="colour") echo " selected";
					if ("marker"==$d and $parameter=="symbol") echo " selected";
				} else {
					if ("$d" == $$varname) echo " selected";
				}
				echo ">$dd</option>\n";
			}
			echo "</select></td>\n";
			echo "<td>";
			echo "<p>Specification of Trait:</p>\n";
			$varname="$parameter"."_trait";
			echo "<input type=field name=".$varname;
			echo " value=\"".$$varname."\"";
			echo ">"; #.$$varname.
			echo "<br>Examples: EXAMPLE_TRAITS";
			echo "</td>\n";
			echo "<td>";
			echo "<p>Specification of Phenotype (\"Covariate\"):</p>\n";
			$varname="$parameter"."_phen";
			echo "<select name=".$varname.">\n";
			foreach ($phenotypes as $p) {
				echo "<option value=\"".$p."\"";
				if (!empty($$varname)) {
					if ($p == $$varname) echo " selected";
				}
				echo ">$p</option>\n";
			}
			echo "</select>\n";
			echo "</td>\n";
			echo "<td>";
			echo "<p>Specification of Marker:</p>\n";
			$varname="$parameter"."_marker";
			if (empty($$varname)) {
				$$varname="most_sep_geometric";
			}
			echo "<select name=".$varname.">\n";
			foreach ($markers_mod as $m=>$mdisplay) {
				echo "<option value=\"".$m."\"";
				if (!empty($$varname)) {
					if ($m == $$varname) {
						echo " selected";
					}
				}
				echo ">$mdisplay</option>\n";
				if (!empty($$varname)) {
					if ($m == $$varname) {
						echo "<!-- Equal: ".$$varname." and $m-->";
					} else {
						echo "<!-- Unequal: ".$$varname." and $m-->";
					}
				}
			}
			echo "</select>\n";
			echo $$varname;
			echo "</td>\n";
			echo "</tr>";
			echo "</table>\n";
		}

		echo "<tr><th>Presentation</th><td>";
		echo "<table><tr>";
		echo "<td>Main title</td><td colspan=5><input type=text name=main size=80></td></tr>\n";
		echo "<td>Sub title</td><td colspan=5><input type=text name=sub size=80></td></tr>\n";
		echo "<th colspan=2>Image</th>";
		echo "<th colspan=2>Field</th>";
		echo "<th colspan=2>Axes</th></tr>\n";
		echo "<td>image width:</td>  <td><input type=text size=4 name=imagewidth  value=\"".    (empty($imagewidth)?"":$imagewidth)."\"></td>\n";
		echo "<td>hull linewidth:</td>   <td><input type=text size=4 name=hulllinewidth   value=\"".    (empty($hulllinewidth)?1:$hulllinewidth).   "\"></td>\n";
		echo "<td>axes linewidth:</td>   <td><input type=text size=4 name=axeslinewidth   value=\"".    (empty($axeslinewidth)?3:$axeslinewidth).   "\"></td></tr>\n";
		echo "<td>image height:</td> <td><input type=text size=4 name=imageheight value=\"".    (empty($imageheight)?"":$imageheight)."\"></td>\n";
		echo "<td>hull linetype:</td>    <td><input type=text size=4 name=hulllinetype    value=\"".    (empty($linetype)?3:$hulllinetype).     "\"></td>\n";
		echo "<td>axes linetype:</td>    <td><input type=text size=4 name=axeslinetype    value=\"".    (empty($axeslinetype)?"":$axeslinetype).    "\"></td></tr>\n";
		echo "<td colspan=2></td>";
		//echo "<td>line colour:</td>  <td><input type=text size=4 name=linecolour  value=\""  .(empty($linecolour)?"red":$linecolour)."\"></td>\n";
		echo "<td>axes colour:</td>  <td><input type=text size=4 name=axescolour  value=\"".(empty($axescolour)?"black":$axescolour)."\"></td></tr>\n";

		echo "<tr>";
		echo "<td>";
		echo "Output format:";
		echo "</td>";
		echo "<td colspan=2>";
		if (empty($format)) $format="png";
		foreach (array("pdf"=>"PDF","png"=>"PNG","jpeg"=>"JPG") as $v=>$vv) {
			echo "<input type=\"radio\" name=\"format\" value=\"$v\"  " . (($v==$format)?"checked":"")  .">$vv";
			if ("JPG" != $vv) echo ", ";
		}
		echo "</td></tr>\n";

		echo "</table>\n";
		echo "</td></tr>\n";
		echo "<tr><td>&nbsp;</td><td></td></tr>\n";
		echo "<tr><td align=right><input type=submit></td>";
		echo "<td align=left><input type=reset>";
		echo "&nbsp;&nbsp;&nbsp;<input type=checkbox name=inlineImages value=1 />Inline Images";
		echo "&nbsp;&nbsp;&nbsp;<input type=checkbox name=rerunAnalyses value=1 />Rerun previous analyses";
		echo "&nbsp;&nbsp;&nbsp;<input type=checkbox name=verbose value=1 />verbose";
		echo "&nbsp;&nbsp;&nbsp;<input type=checkbox name=legend value=1 />legend";
		echo "</td></tr>\n";
		echo "</table>\n";

		echo "</form>\n";

	}
	else {

		#
		# invocation of external R script
		#

		if (isset($_POST["debug"]) or isset($_GET["debug"])) {
			echo "cwd: " . getcwd() . "<br>\n";
			#print_r($_SERVER);
		}

		$rscript = getcwd() . "/../../scripts/analyses/xyplot.R";
		if (!file_exists($rscript)) {
		  errorMessage("R script '$rscript' not found.");
	          exit();
		}

		if (empty($format)) $format="png";

		$outputfilename = "tmp_images/xyplot_output";

		$errors=array();
		$attributes=array();

		$cmd = "$rscript";
		$cmd .= " --format $format";
		array_push($attributes,"--format","png");

		if (!empty($verbose)) {
		  $cmd .= " --verbose";
		  array_push($attributes,"--verbose",1);
		}

		if (!empty($legend)) {
		  $cmd .= " --legend";
		  array_push($attributes,"--legend",1);
		  $outputfilename .= "_lengend";
		}


		foreach ($dimensions as $d => $dd) {
			$select_varname="selection_$d";
			$value_varname=$d."_".$$select_varname;
			if (empty($value_varname)) {
				if ("xaxis"=="$d") $errors[]="Missing display variable for X-axis";
				if ("yaxis"=="$d") $errors[]="Missing display variable for Y-axis";
			} else {
				$outputfilename .= "_$d_".$$value_varname;
				array_push($attributes,"--selection_${d}",$$select_varname);
				$cmd .= " --selection_${d} ".$$select_varname;
				array_push($attributes,"--value_${d}",$$value_varname);
				$cmd .= " --value_${d} ".$$value_varname;
			}
		}

		if (0<count($errors)) {
			errorMessage("Spotted the following issues: <ul><li>".join("<li>",$errors)."</ul>");
			exit;
		}


		# the names of the html fields are the same as the ones 
		# that the application expects as attributes
		foreach($presentationAttributes as $pa) {
			if ($verbose) echo "  checking if attribute '--$pa' is set";
			if (empty($$pa)) {
				if ($verbose) echo " ... it is not - skipping<br>\n";
			}
			else {
				if ($verbose) echo " ... setting to " . $$pa . "<br>\n";
					array_push($attributes,"--$pa",'"'.$$pa.'"');
				$cmd .= " --$pa \"".$$pa."\"";
				$outputfilename .= "_".$pa."_".$$pa;
			}
		}

		$outputfilename .= ".$format";

		$cmd .= " --output $outputfilename";
		array_push($attributes,"--output",$outputfilename);

		$cmd = "$rscript ".join(" ",$attributes);


		if (!file_exists($outputfilename) or !empty($rerunAnalyses)) {
			if (file_exists("$outputfilename")) {
			    echo "<p>Removing filename to update: '$outputfilename'.";
			    if (!unlink("$outputfilename")) {
				echo "<br><font color=red>Attention:</font>: File '$outputfilename' could not be removed.\n";;
			    }
			    echo "</p>";
			}
			elseif ($verbose) {
			    echo "<p>Could not find any prior existing file '$outputfilename'.</p>\n";
			}
			if ($verbose) echo "executing '$cmd'<br>\n";
			#print_r($attributes);
			echo "<small><pre>";
			echo shell_exec($cmd);
			echo "</pre></small>\n";
		}
		else {
			echo "Found image '$outputfilename' to already exist, not rerunning analysis.";
		}

		$imagePath=dirname($_SERVER["PHP_SELF"])."/$outputfilename";

		if ("pdf" != $format) {
			if (!empty($inlineImages)) {
				echo "<IMG SRC=\"$imagePath\" HEIGHT=\"100%\">\n";
			}
		}
		echo "<a href=\"http:$imagePath\">$outputfilename</a><br/>\n";
	}
	include("footer.php");
?>
