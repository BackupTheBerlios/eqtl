<?php

TEMPLATEWARNINGHASH

/**
STARTOFDOCUMENTATION

=head1 NAME

func_covariates.php

=head1 SYNOPSIS

To be included with
  include_once("func_covariates.php")
from other PHP-scripts.


=head1 DESCRIPTION

This file prepares collection of routines to retrieve and present covariates.
The idea is that information about the available covariates are retrievable
from the database schema.

=cut

the documentation does not end here but is dispersed throught the document.
*/


/**

=head2 displayCovariates

substitutes indicators '_int' and '_add' for 'interacting'
and 'additive' with '<sup>(i)</sup>' and '<sup>(a)</sup>'.

=cut

*/
function displayCovariates($cc){
	return(preg_replace("/_add/","<sup>(a)</sup>",
		  preg_replace("/_int/","<sup>(i)</sup>",$cc)));
}


/**

=head2 convert_string_to_covariates_array

Configuration stores the covariate names as a
comma or blank separated string. This routine
converts this string into a workable array.

That string should be the exact same as the
covariates are stored in the database. Don't change
one without the other.

=cut

 */
function convert_string_to_covariates_array($cov) {
	if (!is_array($cov)) {
		$cov=preg_split("/[ ,]+/",$cov);
	}
	return($cov);
}


/*

=head2 get_covars_on_your_own_from_qtl

Inspects table qtl to read out all occuring covariates and return these in a list.

=cut

 */
function get_covars_on_your_own_from_qtl($dbh) {
	global $debug;
	global $covariates_qtl;
	if (isset($covariates_qtl)) {
		return($covariates_qtl);
	}
	$query = "SELECT distinct covariates from qtl where covariates != ''";
	$result = mysql_query($query) or die('Query failed: ' . mysql_error());
	$retrieved=array();
	while($line=mysql_fetch_array($result, MYSQL_ASSOC)) {
		#if ($debug) print_r($line); echo "<br>";
		array_push($retrieved,$line["covariates"]);
	}
	$covariates_qtl=$retrieved;
	return($retrieved);
}


/*

=head2 get_covars_on_your_own_from_schema

=cut

*/
function get_covars_on_your_own_from_schema($dbh) {
	global $debug;
	$query = 'DESCRIBE qtl';
	$result = mysql_query($query) or die('Query failed: ' . mysql_error());
	$retrieved=array();
	while($line=mysql_fetch_array($result, MYSQL_ASSOC)) {
		#if ($debug) print_r($line); echo "<br>";
		if ("covariates" == $line["Field"]) {
			#echo "In covariates:"; print_r($line);
			$quotedFields = preg_split("/,/",$line["Type"]);
			foreach($quotedFields as $t) {
				$takeMiddle=preg_split("/'/",$t);
				array_push($retrieved,$takeMiddle[1]);
			}
		}
		else {
			// this function might evolve, still.
		}
	}
	#echo "\n"; echo "FINDME\n"; print_r($retrieved); echo "\n";
	mysql_free_result($result);
	return($retrieved);
}

/**
 * internal variable to store previously retrieved covariates
 */
$covariates_values=array();

/**

=head2 prepare_covariates_values_hash

Retrieval of covariates from database schema and assigning
values to the strings, accordingly.

=cut

 */
function prepare_covariates_values_hash($dbh) {
	global $covariates_values;
	if (0==count($covariates_values)) {
		$cov = get_covars_on_your_own_from_schema($dbh);
		$v=1;
		foreach ($cov as $c) {
			$covariates_values[$c]=$v;
			$v = $v*2;
		}
	}
	return $covariates_values;
}


$covariates_statistics=array();

/*

=head2 prepare_covariates_statistics

=cut

*/
function prepare_covariates_statistics($dbh,$initial=array()) {
	global $covariates_statistics;
	if (0==count($covariates_statistics)) {
		$cov = prepare_covariates_values_hash($dbh);
		foreach ($cov as $c=>$v) {
			#echo "<br>c=$c\n";
			$c_parts=preg_split("/_/",$c);
			if (isset($initial[$c_parts[0]])) {
				array_push($initial[$c_parts[0]],$c_parts[1]);
			}
			else {
				$initial[$c_parts[0]]=array($c_parts[1]);
			}
		}
		$covariates_statistics=$initial;
	}
	#print_r($covariates_statistics);
	return($covariates_statistics);
}

/*

=head2 select_covariates

=cut

*/
function select_covariates($dbh,$cov,$maxPerLine=6) {

	global $_POST, $_GET; // still to be used.
	global $covariates; // the covariates selected on the web site
	if (empty($covariates)) {
		$covariates=$_POST["covariates"];
		if (empty($covariates)) {
			$covariates=$_GET["covariates"];
		}
	}

	#print_r($covariates);
	
	/*
	if( $cov == 'qtl' or $cov == 'locusInteraction' or $cov == 'both' ) {
		$cov = get_covars_on_your_own_from_schema($dbh);
	} else {
		$cov = convert_string_to_covariates_array($cov);
	}
	*/
	$cov=array();
	$cov["none"]=array();
	$cov = prepare_covariates_statistics($dbh, $cov);

	#echo "FINDME COVARIATES STATISTICS"; print_r($cov);

	echo "<table border=1><tr>";
	$numPerLine=0;
	foreach($cov as $n=>$c) {

		echo "<td valign=top>";
		echo "<table>\n"
		     ."<tr><th class=tl>$n</th></tr>\n"
		     ."<tr><td valign=top nowrap>";
		#foreach(("none"=="$c"?array("only"):array_merge(array("exclude"),$c)) as $v)
		foreach(("none"=="$c"?array("only"):$c) as $v)
		#foreach(("none"=="$c"?array("only"):array_merge($c,array("none"))) as $v)
		{
			echo "<input type=checkbox name=\"covariates[]\" value=\"".$n."_".$v."\"";
			#print_r($covariates);
			if ((!empty($covariates)) and is_array($covariates)) {
				if (in_array(($n."_".$v),$covariates,TRUE)) echo " checked";
			}
			echo ">$v<br>\n";
		}
		echo " </td></tr></table>";
		echo "</td>";
		$numPerLine++;
		if ($numPerLine>=$maxPerLine) {
			echo "</tr>\n<tr>";
			$numPerLine=0;
		}
	}
	echo "</tr></table>\n";
}

/*

=head2 select_covariates_combinations

The function does not take the information on covariates from the schema,
but retrieves the combinations of covariates as they are found for existing
expression QTL.

=cut

*/

function select_covariates_combinations($ncol=2,$htmlFieldName="qtl_covariates") {
	echo "<b>Covariates:</b><br>";
	$covars = get_covars_on_your_own_from_qtl($linkLocal);
	//print_r($covars);
	echo "<table border=0><tr>";
	foreach($covars as $n=>$covar) {
		if (0 == $n % $ncol) echo "</tr><tr>";
		echo "<td>";
		echo "<input type=\"checkbox\" name=\"".$htmlFieldName."[]\" value=\"$covar\" />";
		echo "</td><td>";
		echo preg_replace("/,/"," ",displayCovariates($covar));
		echo "</td>";
	}
	echo "</tr>";
	echo "</table>";
}

/*

=head1 AUTHOR

Steffen ME<ouml>ller <moeller@inb.uni-luebeck.de>

=head1 COPYRIGHT

University of LE<uuml>beck, 2008-2009

=cut

ENDOFDOCUMENTATION

*/

?>
