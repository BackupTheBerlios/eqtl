<?php
	TEMPLATEWARNINGHASH

/**
STARTOFDOCUMENTATION

=pod

=head1 NAME

trait.php - presentation of details to gene identifier (probesets)

=head1 SYNOPSIS

a dynamic web page - may be invoked without parameters

=head1 DESCRIPTION

The page is supposed to gather all information that is required to
learn about the identity of a gene. Projects are likely to differ
in their presentation of such details.

The data of the traits table is presumed to already contain all
information that is normally required to inform that user about the
gene. That transfer from the chip-specification or the Ensembl database
needs to be performed once by the maintainer of this installation.

=head2 Common attributes

=over 4

=item 

=back

=head1 SEE ALSO

=over 4

=item scripts/db_management/trait_ensembl_transfer.pl - 

=item trait_summary.php - overview on covariates for single trait

=back

=head1 AUTHOR

Steffen ME<ouml>ller <moeller@inb.uni-luebeck.de>

=head1 COPYRIGHT

Universities of Rostock and LE<uuml>beck, Germany, 2003-2010

=cut

ENDOFDOCUMENTATION
*/

	require_once("header.php");
	$database="DATABASEEQTLNAME";
	require_once("func_connecti.php");
	require_once("func_covariates.php");
	require_once("func_selection.php"); // prints parts of the HTML for forms
	require_once("class_Trait.php");

	show_small_header("Selection of eTraits",TRUE);

	$dataSelectionFieldsQTL = array(
			"direct", "submitted",
			"VarianceMin", "VarianceMax",
			"maxNumCorrGenesToShow",
			"expr_neg_cor_max",  "expr_neg_cor_min",
			"expr_pos_cor_max",  "expr_pos_cor_min",
			"LODmin","LODmax",
			"MeanMin","MeanMax",
			"MedianMin", "MedianMax",
			"NumberChromosomesPerTraitMin","NumberChromosomesPerTraitMax",
			"phen",
			"phen_correlation",
			"phen_pos_cor_min","phen_neg_cor_min",
			"phen_pos_cor_max","phen_neg_cor_max",
			"trait_phen_analysis_analysis","trait_phen_analysis_id","trait_phen_analysis_value_min","trait_phen_analysis_value_max",
			"qtl_covariates",
			"PvalueMin","PvalueMax",
			"SdMin","SdMax",
			"traitlist", "traits",
			"gene_name", "locus", 
			"trait_chromosome", "trait_start", "trait_stop",
			"limit","order","innerOrder");

	// specification of attributes to be shown in table
	$a=array("Trait"=>1,
		"trait_name"=>1, "trait_chromosome"=>1, "trait_start"=>1,
		"trait_stop"=>1, "trait_strand"=>1, "trait_band"=>0,
		"ensembl_stable_gene_id"=>1,"gene_name"=>1,
		//"Rat_gene_associated"=>1, "Human_ontholog_gene"=>1, "transcript"=>1,
		"mean_sd_variance"=>1,
		#"mean"=>1, "median"=>1, "sd"=>1, "variance"=>1,
		"positive_correlation"=>1,
		"negative_correlation"=>1,
		"phen_correlation"=>1,
		"phen_analyses"=>1,
		"trait_loci"=>1,
		"number_of_chromosomes_per_trait",
#		 "traits_pos_cor"=>1, "traits_pos_cor_rho"=>1,
#		 "traits_pos_cor_most"=>1, "traits_pos_cor_most_rho"=>1,
#		 "traits_neg_cor"=>1, "traits_neg_cor_rho"=>1,
#		 "traits_neg_cor_most"=>1, "traits_neg_cor_most_rho"=>1,
	);

	# Conversion of array keys to values to be checked as being parameter names
	function prependShow($value) {
		$m = "show_".$value;
		return($m);
	};
	$aKeys = array_keys($a);
	$aPrepend = array_map("prependShow",$aKeys);

	$accessible_fields_in_POST_or_GET = array_merge(
		$dataSelectionFieldsQTL,
		$aPrepend
	);

	foreach($accessible_fields_in_POST_or_GET as $vname)
	{
		if (isset($_POST[$vname])) {
			if (is_array($_POST[$vname])) {
				$$vname=$_POST[$vname];
			}
			else {
				$$vname = ltrim(rtrim($_POST[$vname]));
				if (isset($debug) or array_key_exists("debug",$_POST) or array_key_exists("debug",$_GET)) {
					echo $vname."=".$$vname."\t";
				}
			}
		}
		elseif(isset($_GET[$vname])) {
			if (is_array($_GET[$vname])) {
				$$vname=$_GET[$vname];
			} else {
				$$vname = ltrim(rtrim($_GET[$vname]));
				if (isset($debug) or array_key_exists("debug",$_POST) or array_key_exists("debug",$_GET)) {
					echo $vname."=".$$vname."\t";
				}
			}
		}
	}

	# initialisation
	if (!empty($direct)) {
		foreach($a as $i=>$v) {
			$n="show_".$i;
			$$n=$v;
		}
	}


	# transforming array of traits into comma separated string
	if (!empty($traitlist)) {
		if (is_array($traitlist)) {
			$traits=join(",",$traitlist);
		}
		else {
			$traits=$traitlist;
			$traitlist="";
		}
	}

	if (empty($limit)) {
		$limit=10;
	}


function presentRhoInTableElement($rho) {
	echo "<td>".round($rho,2)."</td>";
}

function presentTraitInTableElement($traitid,$something,$connection) {
	$t = new tiqsTrait;
	$n = $t->retrieveFromDBviaTraitID($traitid,$connection);
	
	echo "<td>";
	if (empty($n)) {
		echo "unassigned $traitid";
	}
	else {
		// the return value will always be non-empty because of the hyperlink wrapped around it
		echo "$n";
	}
	echo "</td>";
}

/*

=head2

The function wraps Trait -> retrieveFromDBviaTraitID to return to transform the trait_id into a genename.

=cut

*/


function traitid2genename ($traitid,$connection) {
	$t = new tiqsTrait();
	$t->retrieveFromDBviaTraitID($traitid,$connection);
	return $t->genename;
}


function retrieveCorrelations($traitid,$posOrNeg,$orientation,$maxNumCorrGenesToShow,$connection) {
	global $verbose;

	$corQuery  = "SELECT ";
	$corQuery .= "traits_${posOrNeg}_cor";
	$corQuery .= ", traits_${posOrNeg}_cor_rho, gene_name";
	$corQuery .= " FROM trait";
	$corQuery .= " WHERE trait_id = '$traitid';";
	$resultCor = mysqli_query($connection,$corQuery);
	if (empty($resultCor)) {
		echo "<p>Problem with query '$corQuery': "
			.mysqli_error($connection)."</p>";
		mysqli_close($connection);
		exit;
	}
	$traits=""; $traitsRho="";
	if ($lineCor = mysqli_fetch_array($resultCor,
					MYSQL_ASSOC)) {
		$traits   =preg_split("/,/",$lineCor["traits_${posOrNeg}_cor"]);
		if (count($traits) > $maxNumCorrGenesToShow) {
			$traits = array_slice($traits,0,$maxNumCorrGenesToShow);
		}
		$traitsRho=preg_split("/,/",$lineCor["traits_${posOrNeg}_cor_rho"]);
		if (count($traitsRho) > $maxNumCorrGenesToShow) {
			$traitsRho = array_slice($traitsRho,0,$maxNumCorrGenesToShow);
		}
		if ("horizontal"=="$orientation") {
			echo "<small>";
			echo "<table border=1>\n";
			echo "<tr><th rowspan=2>$posOrNeg</th><th>Gene</th>";
			array_walk($traits,"presentTraitInTableElement",$connection);
			echo "</tr>\n";
			echo "<tr><th>Rho</th>";
			array_walk($traitsRho,"presentRhoInTableElement");
			echo "</tr>\n";
			echo "</table>\n";
			echo "</small>";
		}
		else {
		   foreach($traits as $tp=>$tv) {
			if (0 < $tp) echo ", ";
			$genename=traitid2genename($tv,$connection);
			if ($genename) {
				echo $genename;
			}
			else {
				echo "*<a href=\"trait.php?traits=$tv\">$tv</a>";
			}

			echo " (".round($traitsRho[$tp],2).")";
			if ($maxNumCorrGenesToShow < $tp) break;
		   }
		}
	}
	else {
		echo "Could not find any correlations for trait '$traitid'.\n";
	}
	mysqli_free_result($resultCor);
}


		
	if (empty($direct) and empty($submitted)) {
?>
		<form id=mainform action=trait.php method=get>
		<input type=hidden name=submitted value=1>
		<table><tr><td valign=top>
			<table cellspacing=5>
<?php
			print_selection_form($linkLocali,"all_qtl_trait");
?>
			<tr><th align=right>inner order by:</th><td>
				<select name=innerOrder>
					<option value="LOD DESC">LOD</option>
					<option value="Chr,cMorgan">Chr,cMorgan</option>
					<option value="pvalue">pvalue</option>
				</select>
			</td></tr>
			<tr><th align=right>order by:</th><td>
				<select name=order>
					<option value=trait_id>Trait ID</option>
					<option value="number_of_chromosomes_per_trait DESC">Number of chromosomes per trait</option>
					<option value="LOD DESC">QTL LOD score</option>
					<option value="pvalue ASC, LOD DESC">QTL pvalue</option>
					<option value="mean DESC">Trait mean expression</option>
					<option value="median DESC">Trait median</option>
					<option value="sd DESC">Trait standard deviation</option>
					<option value="variance DESC">Trait variance</option>
					<option value="trait_phen_analysis_value.value ASC">Phen Analysis Value</option>
					<option value="traits_pos_cor_most_rho DESC">Positive correlation with other genes (descending)</option>
					<option value="traits_neg_cor_most_rho DESC">Negative correlation with other genes (ascending)</option>
				</select>
			</td></tr>
			<tr><th align=right>Limit lines shown:</th><td><input type=t_id limit 150 ext name=limit value=30></td></tr>
			<tr><td>&nbsp;</td><td></td></tr>
			<tr><td class=r><input type=submit></td><td align=left><input type=reset></td></tr>
			</table>
		</td>
		<td align=center valign=top>
			<small><small>
			<table border=0>
			<tr><th bgcolor=black align=left><font color=orange><small>Show Field</small></font></th></tr>
<?php
			foreach($a as $i=>$v) {
				echo "<tr><td align=left><input type=checkbox name=show_"
					.$i.(empty($v)?"":" checked").">$i</td></tr>\n";
			}
?>
			</table>

			<H3>Selection of traits' controling QTL</h3>
			<?php select_covariates_combinations($linkLocali); ?>
		</td>
		</tr>
		</table>
		</form>
<?php
	}
	else {

		#
		# Perform query and present results
		#

		require_once("func_species.php");
		require_once("func_conversion_ENSEMBLVERSION.php");
		require_once("func_covariates.php");

		if (empty($innerOrder)) {
			$innerOrder = "locus.Chr,locus.cMorgan";
		}

		if (empty($linkLocali)) {
			echo "<p>trait.php: Could not create link to database.</p>";
			exit;
		}

		if (empty($maxNumCorrGenesToShow)) {
			$maxNumCorrGenesToShow=50;
		}

		//print_r($_GET);
		//print_r($qtl_covariates);
		
		$distinct = "";
		$query="";
		$having="";
		$attribsSelect  = " trait.trait_id as Trait";
		$attribsGroup   = " Trait";
		$traitattribs = array("name","chromosome","start","stop","band","strand");
		foreach ( $traitattribs as $s) {
			$attribsSelect .= ", trait.$s";
			$attribsSelect .= " AS trait_$s";
			$attribsGroup  .= ", trait_$s";
		}

		foreach ($a as $n=>$v) {
			$showname="show_$n";
			#echo "$showname<br>\n";
			if (!empty($$showname)) {
				switch($n) {
				case "Chromosome":
					break;
				case "Trait":
					break;
				case "Rat_gene_associated":
					$attribs .= ", gene_stable_id_rat as Rat_gene_associated";
					break;
				case "Human_ontholog_gene":
					$attribs .= ", hum_onth_ens as Human_ontholog_gene";
					break;
				case "gene_name":
					$attribsSelect .= ", gene_name ";
					$attribsGroup  .= ", gene_name ";
					break;
				case "locus":
					$attribsSelect .= ", locus";
					break;
				case "transcript":
					$attribsSelect .= ", gene_assignment AS transcript ";
					$attribsGroup  .= ", transcript ";
					break;
				case "mean_sd_variance":
					$attribsSelect .= ",mean,sd,median,variance";
					$attribsGroup  .= ",mean,sd,median,variance";
					break;
				case "positive_correlation":
				/*
					The data should not be shown independently from the outer query
					$attribsSelect .= ",traits_pos_cor, traits_pos_cor_rho";
					$attribsSelect .= ",traits_pos_cor_most, traits_pos_cor_most_rho";
					$attribsGroup  .= ",traits_pos_cor, traits_pos_cor_rho";
					$attribsGroup  .= ",traits_pos_cor_most, traits_pos_cor_most_rho";
				*/
					break;
				case "negative_correlation":
				/*
					The data should not be shown independently from the outer query
					$attribsSelect .= ",traits_neg_cor, traits_neg_cor_rho";
					$attribsSelect .= ",traits_neg_cor_most, traits_neg_cor_most_rho";
					$attribsGroup  .= ",traits_neg_cor, traits_neg_cor_rho";
					$attribsGroup  .= ",traits_neg_cor_most, traits_neg_cor_most_rho";
				*/
					break;
				case "phen_analyses":
					//$attribsSelect .= ",trait_phen_analysis_value.value as trait_phen_analysis_value;
					//$attribsSelect .= ",trait_phen_analysis_value";
					break;
				case "phen_correlation":
				# the one-to-many relationship cannot be reasonably well
				# resolved for the display of the data. Instead, a second
				# query will be performed while presening the results from
				# this 'outer' query..
					break;
				case "trait_chromosome":
				case "trait_name":
				case "trait_start":
				case "trait_stop":
				case "trait_strand":
				case "trait_band":
					# these are already included in the query - by default
					break;
				case "trait_loci":
					# Nothing to add, will be treated manually as separate sub-query
					break;
				default:
					$attribsSelect .= ", $n";
					$attribsGroup .= ", $n";
				}
			}
		}

		if (!empty ($show_chip_details)) {
			$attribsSelect .= ', details.* ';
			$attribsGroup .= ', details.* ';
		}
		$from   = 'FROM trait ';
		$from  .= 'LEFT JOIN qtl ON trait_id=qtl.Trait LEFT JOIN locus ON qtl.Locus=locus.Name ';
		if (!empty($show_chip_details)) {
			$from  .= 'LEFT JOIN TRAITSDETAILSCHIPDATA AS details ON trait_id=TRAITSDETAILSCHIPPRIMARYID ';
		}
		$where  = 'WHERE ';


		if (!empty($qtl_covariates)) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= "\n"." qtl.covariates in ('"
				. join("','",$qtl_covariates)
				."')"."\n";
		}

		if (!empty($phen)
		 or !empty($phen_neg_cor_min) or !empty($phen_neg_cor_max)
		 or !empty($phen_pos_cor_min) or !empty($phen_pos_cor_max))
		{
			$distinc = "DISTINCT";
			$from .= " RIGHT JOIN trait_phen_cor using(trait_id) ";
			if (!empty($phen_neg_cor_min)) {
				if ("WHERE " != $where) $where .= " AND ";
				$where .= " $phen_neg_cor_min<=trait_phen_cor.rho"."\n";
			}
			if (!empty($phen_neg_cor_max)) {
				if ("WHERE " != $where) $where .= " AND ";
				$where .= " $phen_neg_cor_max>=trait_phen_cor.rho"."\n";
			}
			if (!empty($phen_pos_cor_min)) {
				if ("WHERE " != $where) $where .= " AND ";
				$where .= " $phen_pos_cor_min<=trait_phen_cor.rho"."\n";
			}
			if (!empty($phen_pos_cor_max)) {
				if ("WHERE " != $where) $where .= " AND ";
				$where .= " $phen_pos_cor_max>=trait_phen_cor.rho"."\n";
			}
		}

		if (!empty($phen)) {
			$p = preg_split("/,/",$phen);
			if (1 == count($p)) {
				if ("WHERE " != $where) $where .= " AND ";
				$where .= " phen = '$phen' ";
			}
			else if (0 < count($p)) {
				if ("WHERE " != $where) $where .= " AND ";
				$where .= " phen in '".join("','",$p)."' ";
			}
		}

		if (!empty($NumberChromosomesPerTraitMin)) {
			if ("" != $having) {
				$having .= " AND ";
			}
			else {	
				$having = " HAVING ";
			}
			$having .= " number_of_chromosomes_per_trait >= $NumberChromosomesPerTraitMin ";
		}

		if (!empty($NumberChromosomesPerTraitMax)) {
			if ("" != $having) {
				$having .= " AND ";
			}
			else {	
				$having = " HAVING ";
			}
			$having .= " number_of_chromosomes_per_trait <= $NumberChromosomesPerTraitMax ";
		}

		if (!empty($traits)) {
			$traitsArray=preg_split("/[, ;\t\n]+/",$traits);
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " trait_id IN ('".join("','",$traitsArray)."') ";
		}

		if (!empty($gene_name)) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " gene_name IN ('".join("','",preg_split("/[, ;\t\n]+/",$gene_name))."') ";
		}

		if (!empty($locus)) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " qtl.Locus='$locus' ";
		}

		if (!empty($trait_chromosome)) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " trait.chromosome = '$trait_chromosome'";
		}

		if (!empty($trait_start)) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " trait.stop >= $trait_start*1000*1000";
		}

		if (!empty($trait_stop)) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " trait.start <= $trait_stop*1000*1000";
		}

		if( !empty($NumberChromosomesPerTraitMin) ) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " number_of_chromosomes_per_trait >= $NumberChromosomesPerTraitMin ";
		}

		if( !empty($NumberChromosomesPerTraitMax) ) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " number_of_chromosomes_per_trait <= $NumberChromosomesPerTraitMax ";
		}

		if( !empty($MedianMin) ) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " median >= ".$MedianMin;
		}

		if( !empty($MedianMax) ) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " median <= ".$MedianMax;	
		}

		if( !empty($MeanMin) ) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " mean >= ".$MeanMin;	
		}

		if( !empty($MeanMax) ) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " mean <= ".$MeanMax;
		}

		if( !empty($SdMin) ) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " sd >= ".$SdMin;
		}

		if( !empty($SdMax) ) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " sd <= ".$SdMax;
		}

		if( !empty($VarianceMin) ) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " variance >= ".$VarianceMin;
		}

		if( !empty($VarianceMax) ) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " variance <= ".$VarianceMax;
		}

		if (!empty($expr_pos_cor_min)) {
			//echo "----------expr_pos_cor_min=$expr_pos_cor_min ----------";
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " traits_pos_cor_most_rho >= ".$expr_pos_cor_min;
		}
		else {
			//echo "----------expr_pos_cor_min=$expr_pos_cor_min ----------";
		}

		if (!empty($expr_pos_cor_max)) {
			//echo "----------expr_pos_cor_max=$expr_pos_cor_max ----------";
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " traits_pos_cor_most_rho <= ".$expr_pos_cor_max;
		}
		else {
			//echo "----------expr_pos_cor_max=$expr_pos_cor_max ----------";
		}

		if (!empty($expr_neg_cor_min)) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " traits_neg_cor_most_rho >= ".$expr_neg_cor_min;
		}

		if (!empty($expr_neg_cor_max)) {
			if ("WHERE " != $where) $where .= " AND ";
			$where .= " traits_neg_cor_most_rho <= ".$expr_neg_cor_max;
		}

		if (!empty($trait_phen_analysis_id) or !empty($trait_phen_analysis_analysis)
		 or !empty($trait_phen_analysis_value_min) or !empty($trait_phen_analysis_value_max)) {
			require_once("trait_helper.php");
			if (!isset($trait_phen_analysis_analysis)) $trait_phen_analysis_analysis="";
			$from .= " join trait_phen_analysis_value using(trait_id) ";
			if ("WHERE " != $where) $where .= " AND ";
			$where .=  add_sql_where_for_phen_analysis(
					$trait_phen_analysis_id,$trait_phen_analysis_analysis,
					$trait_phen_analysis_value_min,$trait_phen_analysis_value_max
				   );
		} else if ("trait_phen_analysis_value.value ASC" == "$order" ) {
			errorMessage("Need to specify phen analysis to order for it.");
			exit;
		}

		$query  = "SELECT $distinct $attribsSelect";
		$query .= ",\n COUNT(DISTINCT locus.Chr) AS number_of_chromosomes_per_trait ";
		$query .= "\n"."$from ";
		if( "WHERE " != $where ) {
			$query .= "\n" . $where;
		}
 		$query  .= "\n"." GROUP BY $attribsGroup $having";

		if (!empty($order)) {
			$query .= "\n"." ORDER BY ".$order." "."\n";
		}
		if (!empty($limit)) {
			$query .= " LIMIT ".$limit.";";
		}

		if (!empty($verbose)) echo "<p><pre>query: $query</pre></p>";

		$result = mysqli_query($linkLocali, $query);
		if (empty($result)) {
			echo "<p>";
			echo "Problem with query:<br>\n";
			echo "<pre>$query</pre>\n";
			echo mysqli_error($linkLocal)."</p>";
			mysqli_close($linkLocali);
			exit;
		}
		$firstRow=true;
		echo "<small><table border=1>\n";
		$lineno=0;
		while ($line = mysqli_fetch_array($result, MYSQL_ASSOC)) {
			$lineno++;
			if ($firstRow) {
				$firstRow=FALSE;
				echo "<tr bgcolor=yellow valign=top>";
				foreach($line as $n=>$l) {
					$f="show_".$n;
					if (!empty($$f)) {
						switch($n) {
						case "trait_chromosome": // shown together with 'start'
						case "trait_band": // shown together with 'start'
						case "trait_strand": // shown together with 'start'
						case "trait_stop": // shown together with 'start'
							continue; 
							break;

						case "trait_start":
							echo "<th nowrap rowspan=2 valign=top>";
							echo "<small>chr (strand):<br>start - stop</small>";
							echo "</th>";
							break;

						case "trait_name": //shown together with 'trait_id/Trait'
							break;

						default:
							echo "<th rowspan=2><small>$n</small></th>";
						}
					}
					else if("traits_pos_cor"=="$n") {
						echo "<th rowspan=2 valign=top>positive correlation</th>\n";
					}
					else if("traits_neg_cor"=="$n") {
						echo "<th rowspan=2 valign=top>negative correlation</th>\n";
					}
					else {
						# Don't show field if not requested to be shown
						# echo "<th rowspan=2 valign=top>$n</th>";
					}
				}
				if (!empty($show_mean_sd_variance)) {
					echo "<th rowspan=2>Stats</th>\n";
				}
				if (!empty($show_phen_analyses)){
					echo "<th rowspan=2>phen analyses</th>\n";
				}
				if (!empty($show_phen_correlation) ){
					echo "<th rowspan=2>phen correlation</th>\n";
				}
				if (!empty($show_negative_correlation)
				 or !empty($show_positive_correlation)){
					echo "<th rowspan=2>Expression Correlation</th>\n";
				}
				if (!empty($show_trait_loci)) {
					echo "<th colspan=8>Loci</th>\n";
				}
// 				echo "<th rowspan=2>Images</th>\n";
				echo "</tr>\n";
				echo "<tr>";
				if (!empty($show_trait_loci)) {
					echo "<th>Chr</th>"
					    ."<th>cMorgan</th>"
					    ."<th>Mbp</th>"
					    ."<th>LOD</th>"
					    ."<th>pvalue</th>"
					    ."<th>95%</th>"
					    ."<th>cis/trans</th>"
					    ."<th>covariates</th>"
					;
				}
				echo "</tr> <!-- first row --> \n ";
			}
			if (0 == $lineno%2) {
				echo "<tr bgcolor=\"lightgray\">";
			}
			else {
				echo "<tr>";
			}
			$traitid="";
			$numberOfLociToShow=0;
			$htmlTextToRepresentLoci="";
			
			# preparing the text to output below, so the number to expect can be determined
			if (!empty($show_trait_loci)) {
				$loci_query="SELECT locus.Chr,locus.cMorgan,"
						# . "locus.Mbp,"
						  ."qtl.LOD,qtl.pvalue,"
				                  ."qtl.quantile,qtl.cis,qtl.covariates "
				           ."\n"."FROM qtl join locus ON qtl.Locus=locus.Name "
					   ."\n"."WHERE qtl.Trait='".$line["Trait"]."' ";

				if (!empty($qtl_covariates)) {
					$loci_query .= " AND ";
					$loci_query .= " qtl.covariates in ('"
						. join("','",$qtl_covariates)
					        ."') ";
				}

				$loci_query .= "\n"."ORDER BY $innerOrder";

				//echo $loci_query;

				$loci_result = mysqli_query($linkLocali,$loci_query);
				if (empty($loci_result)) {
					echo "<p>Problem in query '$loci_query': ".mysqli_error($linkLocali)."</p>";
					mysqli_close($linkLocali);
					exit;
				}
				while($loci_line = mysqli_fetch_array($loci_result,MYSQL_ASSOC)) {
					$numberOfLociToShow++;
					if (1<$numberOfLociToShow) {
						if (0 == $lineno%2) {
							$htmlTextToRepresentLoci .= "<tr bgcolor=\"lightgray\">";
						}
						else {
							$htmlTextToRepresentLoci .= "<tr>";
						}
					}
					$htmlTextToRepresentLoci .=
					     "<td valign=top>".$loci_line["Chr"]."</td>"
					    ."<td valign=top>".round($loci_line["cMorgan"],0)."</td>"
					    #."<td valign=top>".$loci_line["Mbp"]."</td>"
					    ."<td valign=top>".round(cM2bp($loci_line["Chr"],$loci_line["cMorgan"])/1000/1000,1)."</td>"
					    ."<td valign=top>".round($loci_line["LOD"],2)."</td>"
					    ."<td valign=top>".$loci_line["pvalue"]."</td>"
					    ."<td valign=top>".round($loci_line["quantile"],2)."</td>"
					    ."<td valign=top>".($loci_line["cis"]?"cis":"trans")."</td>"
					    ."<td valign=top>".displayCovariates($loci_line["covariates"])."</td>"
					;
					$htmlTextToRepresentLoci .= "</tr>\n";
				}
				mysqli_free_result($loci_result);
				if (0==$numberOfLociToShow) {
					$numberOfLociToShow++;
					$htmlTextToRepresentLoci = "<td colspan=8 valign=top>no locus found</td>";
					#$htmlTextToRepresentLoci .= "</tr>\n"; // only closing line when that section of code has opened one
				}
			}

			foreach($line as $n=>$l) {
				$f="show_".$n;
				if (!empty($$f)) {
// 					echo "$n => $l\t!\t";
					switch($n) {
					case "liNo":
					case "liA":
					case "liB":
					case "AlNo":
					case "BlNo":
					case "AlName":
					case "BlName":
						break;
					case "Trait":
						$traitid=$l;
						echo "<td align=left nowrap valign=top rowspan=$numberOfLociToShow>"
						.$line["trait_name"] . " &nbsp; "
					/*
						."<a href=\"".probe2ensemblUrl($l,$species_name_ensembl_core)
						."\">$l</a>"
					*/
					;
						echo ""
						."<h5>Singular Effects</h5>"
						."<ul>"
						."<li><a href=\"qtl.php?traitlist=$l\">QTL form - entry mask</a>"
						."<li><a href=\"qtl.php?direct=1&traitlist=$l\">QTL form - show all</a>"
						."<li><a href=\"trait_summary.php?traitlist=$l\">Tabular overview</a>"
						."</ul>"
						."<h5><a href=\"interaction.php?traitlist=$l&direct=1&LODmin=0\">Interactions</a></h5>"
					/*
						."<li>Interactions"
						."<ul>"
						."<li><a href=\"interaction.php?traitlist=$l&type=X\">i</a>"
						."<li><a href=\"interaction.php?traitlist=$l&type=Y\">j</a>"
						."</ul>"
					*/

						."<h5>Plots</h5>"
						."<ul>"
						."<li><a href=\"effectplot.php?traitlist=$l\">Effectplot</a>"
						."</ul>";
					/*
						echo "<h5><a href=\"".probe2ensemblSearchUrl($l,$species_name_ensembl_core)
						    ."\">Ensembl Search</a></h5>";
					*/
						echo "</td>";
							break;
					case "Rat_gene_associated":
						$b=explode(".",$l);
						echo "<td rowspan=$numberOfLociToShow valign=top><a href=\""
							.gene2ensemblUrl($b[0],$species_name_latin)
							."\">$l</a></td>";
						break;
					case "transcript":
						$b=explode(".",$l);
						echo "<td rowspan=$numberOfLociToShow valign=top><a href=\""
							.transcript2ensemblUrl($b[0],$species_name_latin)
							."\">$l</a></td>";
						break;

					case "trait_start":
						echo "<td align=center rowspan=$numberOfLociToShow valign=top>";
						if (!empty($line["trait_chromosome"])) {
							echo $line["trait_chromosome"];
						}
						if (!empty($line["trait_strand"])) {
							echo " (".((1==$line["trait_strand"])?"+":"-").")";
						}
						echo " : ";
						echo $line["trait_start"];
						if (!empty($line["trait_stop"])) {
							echo " - ".$line["trait_stop"];
						}
						echo "</td>";
						break;

					case "trait_chromosome":
					case "trait_strand":
					case "trait_stop":
					case "trait_band":
						// dealt with in 'start'
						break;

					case "ensembl_stable_gene_id":
						$b=explode(".",$l);
						echo "<td class=small rowspan=$numberOfLociToShow valign=top><a href=\""
							.gene2ensemblUrl($b[0],$ensemblorganism)
							."\">$l</a></td>";
						break;


// 					case "MMSV_data":
// 						echo "<td rowspan=$numberOfLociToShow valign=top>".$line["mean"]."</td><td rowspan=$numberOfLociToShow valign=top>".$line["median"]."</td><td rowspan=$numberOfLociToShow valign=top>".$line["sd"]."</td><td rowspan=$numberOfLociToShow valign=top>".$line["variance"]."</td>";
// 						break;
// 					case "":
// 						echo "<td valign=top>".$line["gene_stable_id_rat"]."</td><td rowspan=$numberOfLociToShow valign=top>".$line["hum_onth_ens"]."<td rowspan=$numberOfLociToShow valign=top>";
// 						break;
					case "trait_name":
						# dealt with in trait_id/Trait
						break;
					default:
						if (empty($l)) $l="N/A";
						echo "<td ".(!empty($numberOfLociToShow)?"rowspan=$numberOfLociToShow":"")." valign=\"top\">$l</td>";
					}
				}
				else if("traits_pos_cor"==$n) {
					# delt with as "show_positive_correlation below"
				}
				else if("traits_neg_cor"==$n) {
				}
				else {
					# don't show fields not requested to be shown
					# echo "<td rowspan=$numberOfLociToShow>$l</td>\n";
				}
			}

			if (!empty($show_mean_sd_variance)) {
				echo "<td valign=top rowspan=$numberOfLociToShow>";
				echo "mean: ".$line["mean"]."<br/>\nsd: ".$line["sd"]."<br>\n";
				echo "# Loci: $numberOfLociToShow<br>\n";
				echo "# Chr: ".$line["number_of_chromosomes_per_trait"];
				echo "\n";
				echo "</td>\n";
			}

			if (!empty($show_phen_analyses)
				//and empty($trait_phen_analysis_id) # There will be only one analysis-line per trait, show all
			   ){
				echo "<td valign=top rowspan=$numberOfLociToShow>";
				if (empty($traitid)) {
					echo "<i>No trait specified in query.</i>";
				}
				else {
					if (!isset($trait_phen_analysis_analysis)) $trait_phen_analysis_analysis="";
					$phenanalysisquery  = "SELECT";
					$phenanalysisquery .= " analysis";
					$phenanalysisquery .= ",value";
					$phenanalysisquery .= " FROM trait_phen_analysis_value left join trait_phen_analysis using(trait_phen_analysis_id)";
					$phenanalysisquery .= " WHERE trait_id = '$traitid'";

					require_once("trait_helper.php");
					$aswfpa = add_sql_where_for_phen_analysis(
						$trait_phen_analysis_id,$trait_phen_analysis_analysis,
						$trait_phen_analysis_value_min,$trait_phen_analysis_value_max
					);
					if (!empty($aswfpa)) $phenanalysisquery .= " AND $aswfpa";

					$phenanalysisquery .= " ORDER BY value";
					$resultPhenAnalysis = mysqli_query($linkLocali,$phenanalysisquery);
					#print $phenanalysisquery;
					if (empty($resultPhenAnalysis)) {
						echo "<p>Problem with query $phenanalysisquery: ".mysqli_error($linkLocali)."</p>";
						mysqli_close($linkLocali);
						exit;
					}
					$firstPhenAnalysis=true;
					while ($linePhenAnalysis = mysqli_fetch_array($resultPhenAnalysis,
									MYSQL_ASSOC)) {
						if($firstPhenAnalysis){
							$firstPhenAnalysis=FALSE;
							#print_r($line);
						}
						else{
							echo ", ";
						}
						echo "<b>"     .$linePhenAnalysis["analysis"]."</b>"
						   ." p=".round($linePhenAnalysis["value"],3);

					}
					mysqli_free_result($resultPhenAnalysis);
				}
				echo "</td>\n";
			}

			if (!empty($show_phen_correlation)){
				echo "<td valign=top rowspan=$numberOfLociToShow>";
				if (empty($traitid)) {
					echo "<i>No trait specified in query.</i>";
				}
				else {
					$phenquery  = "SELECT";
					$phenquery .= " trait_phen_cor.phen";
					$phenquery .= ",trait_phen_cor.rho";
					$phenquery .= ",trait_phen_cor.p";
					$phenquery .= " FROM trait_phen_cor";
					$phenquery .= " WHERE trait_id = '$traitid'";
					if (!empty($phen_neg_cor_min) or !empty($phen_neg_cor_max)
					 or !empty($phen_pos_cor_min) or !empty($phen_pos_cor_max))
					 {
						$addme="";
						if (!empty($phen_pos_cor_min) and !empty($phen_pos_cor_max)) {
							$addme .= "  (rho > $phen_pos_cor_min AND rho < $phen_pos_cor_max)";
						}
					 	else if($phen_pos_cor_min){
							$addme .= "   rho > $phen_pos_cor_min";
						}
					 	else if($phen_posneg_cor_max){
							$addme .= "   rho < $phen_pos_cor_max";
						}
						if (!empty($phen_neg_cor_min) or !empty($phen_neg_cor_max)) {
							if (empty($addme)) {
								$addme .= " OR ";
							}
							if (!empty($phen_neg_cor_min) and !empty($phen_neg_cor_max)) {
								$addme .= "  (rho > $phen_neg_cor_min AND rho < $phen_neg_cor_max)";
							}
							else if($phen_neg_cor_min){
								$addme .= "   AND rho > $phen_neg_cor_min";
							}
							else if($phen_neg_cor_max){
								$addme .= "   AND rho < $phen_neg_cor_max";
							}
						}
						$phenquery .= "   AND ($addme)";
					}
					else {
						$phenquery .= "   AND p<=0.05";
					}

					if (!empty($phen)) {
						$phenquery .= " AND phen='$phen' ";
					}

					$phenquery .= " ORDER BY p";
					$resultPhen = mysqli_query($linkLocali,$phenquery);
					if (empty($resultPhen)) {
						echo "<p>".mysqli_error($linkLocali)."</p>";
						mysqli_close($linkLocali);
						exit;
					}
					$firstPhen=true;
					while ($linePhen = mysqli_fetch_array($resultPhen,
									MYSQL_ASSOC)) {
						if($firstPhen){
							$firstPhen=FALSE;
							#print_r($line);
						}
						else{
							echo ", ";
						}
						echo "<b>".$linePhen["phen"]."</b>"
							." &rho;".round($linePhen["rho"],3)
							." <i>p</i>".round($linePhen["p"],4);

					}
					mysqli_free_result($resultPhen);
				}
				echo "</td>\n";
			}

			if (       !empty($show_positive_correlation)
				or !empty($show_negative_correlation)) {

			    # Tables are organised horizontally for easier cut'n'paste
			    # Positive and negative are shown side-by-side
				echo "<td valign=top rowspan=$numberOfLociToShow nowrap>";
				if (empty($traitid)) {
					echo "<i>No trait specified in query.</i>";
				}
				else {
					if (!empty($show_positive_correlation)){
						retrieveCorrelations($traitid,"pos",
						"horizontal",$maxNumCorrGenesToShow,$linkLocali);
					}
					if (!empty($show_negative_correlation)){
						retrieveCorrelations($traitid,"neg",
						"horizontal",$maxNumCorrGenesToShow,$linkLocali);
					}
				}
				echo "</td>\n";
			}

			if (!empty($show_trait_loci)) {
				echo $htmlTextToRepresentLoci;
			}

			echo "</tr> <!-- regular end of trait -->\n";
		}
		echo "</table></small>";
		mysqli_free_result($result);
		mysqli_close($linkLocali);
		if (0==$lineno) {
			echo "<p>No traits founds.</p>\n";
		}
	}
	include("footer.php");
?>
