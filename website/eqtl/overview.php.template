<?php

	TEMPLATEWARNINGHASH

/*

=head1 overview

This script prepares a tabular overview on

=over 4

=item covariates

=item chromosomes

=item cis/trans

=item location in classical disease qtl

=back

The figure is prepared in a way that would be suitable for publication.

=head1 CAVEATS

For this page to display properly, on needs to have run "deduceDatabaseCols.pl qtlCis" and "deduceDatabaseCols.pl qtlPos" beforehand.

=head1 AUTHORS

Steffen ME<ouml>ller <moeller@inb.uni-luebeck.de>,
Melanie Theussen-Hedreul

=head1 COPYRIGHT

University of LE<uuml>beck, Germany, 2009

=cut

*/

	require_once("header.php");
	require_once("func_covariates.php");
	require_once("func_selection.php"); // prints part of the HTML for forms

	show_small_header("Tabular overview on Expression QTL",TRUE);

	$database="DATABASEEQTLNAME";
	include_once("func_connecti.php");
	require_once("func_public_qtl.php");

	# fields that should appear
	$dataSelectionFieldsQTL = array(
		"groups",
		"Chromosome","ensemblversion",
		"cM_within","LODmax","LODmin",
		"quantilemin","quantilemax",
		"qtl_covariates",
		"cqtl",
		"split_chromosomes",
		"LODdiffmin","LODdiffmax",
		"PvalueMin","PvalueMax",
		"cM_Peak_Min","cM_Peak_Max",
		"MeanMin","MeanMax","SdMin","SdMax",
		"locus","chrlist", "condition"
	);



	$accessible_fields_in_POST_or_GET = array_merge (
		array("submitted"),
		$dataSelectionFieldsQTL
	);

	foreach($accessible_fields_in_POST_or_GET as $vname)
	{
		if (isset($_POST[$vname])) {
			if (is_array($_POST[$vname])) {
				$$vname=$_POST[$vname];
			}
			else {
				$$vname = ltrim(rtrim($_POST[$vname]));
				if (isset($debug) or array_key_exists("debug",$_POST) or array_key_exists("debug",$_GET)) {
					echo $vname."=".$$vname."\t";
				}
			}
		}
		elseif(isset($_GET[$vname])) {
			if (is_array($_POST[$vname])) {
				$$vname=$_POST[$vname];
			} else {
				$$vname = ltrim(rtrim($_GET[$vname]));
				if (isset($debug) or array_key_exists("debug",$_POST) or array_key_exists("debug",$_GET)) {
					echo $vname."=".$$vname."\t";
				}
			}
		}
	}


	if (empty($submitted)) {

		#
		#   S E T T I N G  O F  P A R A M E T E R S 
		#

		echo "<form action=overview.php method=post>\n";
		echo "<input type=hidden name=submitted value=1>\n";

		echo "<table><tr>"; # the table has only a single row

		echo "<td valign=top>"; # entry of typical filter attributes - left hand side

		echo "<table>\n";
		print_selection_form($linkLocali,"table_overview_scanone");
		echo "<tr><th>Covariates of stored QTL</th><td>";
		select_covariates_combinations($linkLocali);
		echo "<tr><td>&nbsp;</td><td></td></tr>\n";
		echo "<tr><td align=right><input type=submit></td><td align=left><input type=reset></td></tr>\n";
		echo "</table>\n";

		echo "</td>\n<td valign=top>";
		select_from_public_qtls($linkLocali,TRUE);
		echo "</td>";
		echo "</tr>";
		echo "</table>";

		echo "</form>\n";

	}
	else {

		#
		#   P R E P A R A T I O N  O F  T A B L E
		#

		if (empty($qtl_covariates) or 0 == count($qtl_covariates)) {
			echo "<p>No list of covariate combinations selected, ";
			if ("aggregated" == "$split_chromosomes" or "no" == "$split_chromosomes") {
				echo "showing all entries of qtl table.</p>\n";
			}
			else {
				echo "falling back to default list.</p>\n";
				//FIXME: needs configuration/something else
				$qtl_covariates = array("","eae_add","eae_int","dud_int");
			}
		}

		$where = "WHERE";

		if (!empty($qtl_covariates)) {
			if ("aggregated" == "$split_chromosomes" or "no" == "$split_chromosomes") {
				# Show information on all covariates
			}
			else {
				if ("WHERE" != "$where") $where .= " AND ";
				$where .= " covariates in "
				         ."("
				         .preg_replace("/'none'/","''",("'".join("','",$qtl_covariates)."'"))
					 .") ";
			}
		}

		if (!empty($PvalueMin)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " qtl.pvalue >= $PvalueMin ";
		}
		if (!empty($PvalueMax)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " qtl.pvalue <= $PvalueMax ";
		}

		if (!empty($LODmin)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " qtl.LOD >= $LODmin ";
		}
		if (!empty($LODmax)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " qtl.LOD <= $LODmax ";
		}
		if (!empty($MeanMin)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " trait.mean >= $MeanMin ";
		}
		if (!empty($MeanMax)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " trait.mean <= $MeanMax ";
		}

		$query = "SELECT covariates,locus.chr,count(*) as numTraits,sum(cis) as numCis, max(timestamp) as timestamp "
			." FROM qtl join locus on qtl.Locus = locus.Name ";
		if ("aggregated" == "$split_chromosomes" or "no" == "$split_chromosomes") {
			# overriding previous definition
			$query = "SELECT covariates,count(*) as numTraits,sum(cis) as numCis "
				.",max(timestamp) as timestamp FROM qtl ";
		}
		if (!empty($MeanMax) or !empty($MeanMin)) {
			 $query .= " join trait on qtl.Trait = trait_id ";
		}
		if ("WHERE" != "$where") $query .= " $where ";

		if ("aggregated" == "$split_chromosomes" or "no" == "$split_chromosomes") {
			$query .= " GROUP BY covariates ORDER BY numTraits DESC ";
		}
		else {
			$query .= " GROUP BY covariates,locus.chr ";
		}

		echo "<p>Query All:"; print_r($query); echo "</p>\n";

		$result = mysqli_query($linkLocali,$query);
		if (empty($result)) {
			errorMessage(mysqli_error($linkLocali)."</p><p>".$query."</p>");
			//echo "LinkLocal: "; print_r($linkLocali);
			mysqli_close($linkLocali);
			exit;
		}

		if ("aggregated" == "$split_chromosomes" or "no" == "$split_chromosomes") {
			echo "<table border=0 cellspacing=2 cellpadding=1>";
			echo "<tr><td colspan=20 bgcolor=black></td></tr>\n";
			$first=TRUE;
			$line=array();
			while ($line = mysqli_fetch_array($result, MYSQL_ASSOC)) {
				if ($first) {

					echo "<tr>";
					foreach ($line as $n=>$v) {
						switch($n) {
							case "covariates":
								$v="<b>Covariates</b>";
								break;
							case "numTraits":
								$v="<b>Traits</b><br>(#)";
								break;
							case "numCis":
								$v="<b>Cis</b><br>(#)";
								break;
							case "timestamp":
								$v="<b>last upload</b>";
								break;
						}
						echo "<td align=center valign=top>$v</td>";
					}
					echo "</tr>";

					echo "<tr>";
					foreach ($line as $n=>$v) {
						echo "<td bgcolor=\"black\"></td>";
					}
					echo "</tr>";
					$first=FALSE;
				}
				echo "<tr>";
				foreach ($line as $n=>$v) {
					switch($n) {
						case "covariates":
							if (empty($v)) {
								$v="none";
							}
							break;
						case "numTraits":
							if (empty($v)) {
								$v="<i>n.a.</i>";
							}
							break;
					}
					echo "<td>$v</td>";
				}
				echo "</tr>";
			}
			echo "<tr>";
			echo "<td bgcolor=\"black\" colspan=20></td>";
			echo "</tr>";
			echo "<caption align=bottom>";
			echo "<i>This table lists in the first column all combinations of covariates, next to the number of traits that are assigned on any chromosome to the respective covariate, followed by a column indicating the number of loci coding at the same chromosomal region as is the associated genetic marker (cis).</i>";
			echo "</caption>";
			echo "</table>\n";
		}
		else {

			$dataFromTable = array();
			while ($line = mysqli_fetch_array($result, MYSQL_ASSOC)) {
				$cov=$line["covariates"];
				$chr=$line["chr"];
				if (""=="$cov") $cov="none";
				if (empty($dataFromTable["$cov"])) {
					$dataFromTable["$cov"] = array();
				}
				$dataFromTable["$cov"]["$chr"]=array(
								"numTraits"=>$line["numTraits"],
								"numCis"=>$line["numCis"],
								"numTrans"=>($line["numTraits"]-$line["numCis"]));
			}

			// print_r($dataFromTable);

	                                                        
			$queryDiseaseLoci = "SELECT covariates,locus.chr,count(distinct qtl.Trait) as numTraits"
					// will return number of traits + 1 (for the 0)
				. ",count(distinct IF(1=cis,qtl.Trait,0)) as numCis "
				. ",count(distinct IF(0=cis,qtl.Trait,0)) as numTrans "
				." FROM qtl join locus on qtl.Locus = locus.Name join qtl.eae_qtl as classicalQTL ";
			if (!empty($MeanMax) or !empty($MeanMin)) {
				$queryDiseaseLoci .= " join trait on qtl.Trait = trait_id ";
			}		

			if ("WHERE" != "$where") $where .= " AND ";
			$where .=     " locus.Mbp IS NOT NULL ";
			$where .= " AND classicalQTL.species='ENSEMBLSPECIESSEARCHURL' ";
			$where .= " AND locus.chr = classicalQTL.chr ";
			$where .= " AND locus.Mbp*1000*1000 >= classicalQTL.start_bps
				    AND locus.Mbp*1000*1000 <= classicalQTL.stop_bps ";
			if (!empty($cqtl)) {
				$where .= " AND classicalQTL.name in ('".join("','",$cqtl)."') ";
			}

			if ("WHERE" != "$where") $queryDiseaseLoci .= " $where ";
			$queryDiseaseLoci .= " GROUP BY covariates,locus.chr ";

			echo "<p>cqtl: "; if (empty($cqtl)) {echo "empty";} else {print_r($cqtl);} echo "</p>\n";
			echo "<p>Query DiseaseLoci:"; print_r($queryDiseaseLoci); echo "</p>\n";

			$result2 = mysqli_query($linkLocali,$queryDiseaseLoci);
			if (empty($result2)) {
				errorMessage(mysqli_error($linkLocali)."</p><p>".$queryDiseaseLoci."</p>");
				//echo "LinkLocal: "; print_r($linkLocali);
				mysqli_close($linkLocali);
				exit;
			}

			$dataFromTableDiseaseLoci = array();
			while ($line = mysqli_fetch_array($result2, MYSQL_ASSOC)) {

				$cov=$line["covariates"];
				if ("" == "$cov") $cov="none";

				if (empty($line["chr"])) {
					errorMessage("Programming Error: expected \$line[\"chr\"] to be non-empty.");
					print_r($line);
					break;
				}
				$chr=$line["chr"];


				if (empty($dataFromTableDiseaseLoci["$cov"])) {
					$dataFromTableDiseaseLoci["$cov"] = array();
				}

				if(!empty($dataFromTableDiseaseLoci["$cov"]["$chr"])) {
					errorMessage("Programming Error: expected \$dataFromTableDiseaseLoci to be ready for covariates "
							."$covariates at chromosome $chr.");
					break;
				}

				$dataFromTableDiseaseLoci["$cov"]["$chr"]=array(
					"numTraitsDiseaseLoci"=>$line["numTraits"], # all traits assigned                to this locus
					"numCisDiseaseLoci"   =>$line["numCis"],    # all traits assigned that are cis   to this locus
					"numTransDiseaseLoci" =>$line["numTrans"]   # all traits assigned that are trans to this locus
				);

				if (       $dataFromTableDiseaseLoci["$cov"]["$chr"]["numTraitsDiseaseLoci"]
					== $dataFromTableDiseaseLoci["$cov"]["$chr"]["numTransDiseaseLoci"]) {

					# all traits are trans

					if (1 == $dataFromTableDiseaseLoci["$cov"]["$chr"]["numCisDiseaseLoci"]) {
						# Exception, the number shown for 'trans' is correct, don't change it later
						$dataFromTableDiseaseLoci["$cov"]["$chr"]["numTransDiseaseLoci"]++ ;
					}

				}
				else if (  $dataFromTableDiseaseLoci["$cov"]["$chr"]["numTraitsDiseaseLoci"]
					== $dataFromTableDiseaseLoci["$cov"]["$chr"]["numCisDiseaseLoci"]) {

					# all traits are cis

					if (1 == $dataFromTableDiseaseLoci["$cov"]["$chr"]["numTransDiseaseLoci"]) {
						# Exception, the number shown for 'trans' is correct, don't change it later
						$dataFromTableDiseaseLoci["$cov"]["$chr"]["numCisDiseaseLoci"]++ ;
					}
				}

				# correct for "0" that is shown because of imperfectionism
				if (!isset($dataFromTableDiseaseLoci["$cov"]["$chr"]["numTransDiseaseLoci"])) {
					errorMessage("Programming Error: numTransDiseaseLoci still unset.");
					echo "\n".'$dataFromTableDiseaseLoci["$cov"]["$chr"] : '."\n";
					print_r($dataFromTableDiseaseLoci["$cov"]["$chr"]);
				}
				else {
					$dataFromTableDiseaseLoci["$cov"]["$chr"]["numTransDiseaseLoci"]-- ;
				}
				$dataFromTableDiseaseLoci["$cov"]["$chr"]["numCisDiseaseLoci"]-- ;
			}
			mysqli_free_result($result2);

			if (!empty($verbose)) {
				echo "dataFromTableDiseaseLoci: ";
				print_r($dataFromTableDiseaseLoci);
			}

			#
			# P R I N T   T A B L E
			#

			$orderOfChromosomes = list_chromosomes();

			echo "<table border=0 cellspacing=2>";
			//echo "<colgroup>"; # chr
			echo "<tr><td colspan=\"".(1+(1+2)*count($qtl_covariates))."\" bgcolor=\"black\"></td></tr>\n";
			echo "<tr>";
			echo "<td rowspan=2 valign=top align=right></td>";
			foreach ($qtl_covariates as $cov) {
				//echo "<colgroup span=2 cellspacing=10>"; # respective cov
				if ("" == "$cov") $cov="none";
				echo "<td>&nbsp;</td><td colspan=2 align=center>"
					.(empty($cov)?"transcript":preg_replace("/,/"," ",displayCovariates($cov)))
				    ."</td>";
			}
			echo "</tr>\n<tr>";
			$totals=array();
			foreach ($qtl_covariates as $cov) {
				if ("" == "$cov") $cov="none";
				$totals["$cov"]=array("cis"=>0,"trans"=>0,"cisDiseaseLoci"=>0,"transDiseaseLoci"=>0);
				echo "<td></td><td bgcolor=\"black\" colspan=2></td>";
			}
			echo "</tr>\n<tr>";
			echo "<td align=left valign=bottom>Chromosome</td>";
			foreach ($qtl_covariates as $cov) {
				if ("" == "$cov") $cov="none";
				echo "<td></td><td align=right>cis</td><td align=right>trans</td>";
			}
			echo "</tr>\n";
			/* -- a solid line is correct
			echo <tr>";
			echo "<td bgcolor=\"black\"></td>";
			foreach ($qtl_covariates as $cov) {
				echo "<td></td>";
				echo "<td bgcolor=\"black\"></td>";
				echo "<td bgcolor=\"black\"></td>";
			}
			echo "</tr>\n";
			*/
			echo "<tr><td colspan=\"".(1+(1+2)*count($qtl_covariates))."\" bgcolor=\"black\"></td></tr>\n";
			foreach ($orderOfChromosomes as $c) {
				echo "<tr>";
				echo "<td align=right>$c&nbsp;&nbsp;&nbsp;&nbsp;</td>";
				foreach ($qtl_covariates as $cov) {
					if ("" == "$cov") { $cov="none"; }
					if (empty($dataFromTable["$cov"])) {
						echo "<td colspan=3>";
						echo "<small>";
						if ($debug) {
							echo "empty(\$dataFromTable[\"$cov\"]), the following keys are available: '"
							     .join("','",array_keys($dataFromTable))."'<br>\n";
						} 
						echo 0;
						echo "</small>";
						echo "</td>";
					} else if (empty($dataFromTable["$cov"]["$c"])) {
						echo "<td colspan=3>";
						if (!empty($dDiseaseLoci)) {
							echo "<small>";
							echo "empty(\$dataFromTable[\"$cov\"]), the following keys are available: '"
								.join("','",array_keys($dataFromTable))."'<br>\n";
							echo "</small>";
						}
						echo "</td>";
					}
					else {
						$d=$dataFromTable["$cov"]["$c"];
						if (empty($dataFromTableDiseaseLoci["$cov"])) {
							errorMessage("Programming Error: Unknown cov '$cov' in \$dataFromTableDiseaseLoci.");
							echo "array_keys(dataFromTableDiseaseLoci) : '".join("','",array_keys($dataFromTableDiseaseLoci))."'\n";
							#print_r($dataFromTableDiseaseLoci);
							break;
						}
						if (empty($dataFromTableDiseaseLoci["$cov"]["$c"])) {
							if (FALSE) {
								# not an error, just no disease loci
								errorMessage("Programming Error: Unknown c [$c] in \$dataFromTableDiseaseLoci[\"$cov\"].");
								echo "\ndataFromTableDiseaseLoci : ";
								echo "array_keys(\$dataFromTableDiseaseLoci[\"$cov\"]) : '"
									.join("','",array_keys($dataFromTableDiseaseLoci["$cov"]))."'\n";
								#print_r($dataFromTableDiseaseLoci);
								echo "</tr>\n";
								break;
							}
							$dataFromTableDiseaseLoci["$cov"]["$c"]=array("numCisDiseaseLoci"=>0,"numTransDiseaseLoci"=>0);
						}
						$dDiseaseLoci=$dataFromTableDiseaseLoci["$cov"]["$c"];
						echo "<td></td>";
						echo "<td align=right>".$d["numCis"]
							.($dDiseaseLoci["numCisDiseaseLoci"]?(" (".$dDiseaseLoci["numCisDiseaseLoci"].")"):"")."</td>";
						echo "<td align=right>".$d["numTrans"]
							.($dDiseaseLoci["numTransDiseaseLoci"]?(" (".$dDiseaseLoci["numTransDiseaseLoci"].")"):"")."</td>";
						if (empty($totals["$cov"])) {
							errorMessage("Programming Error: Unknown cov '$cov' in \$totals.");
						} else {
							$totals["$cov"]["cis"]   += $d["numCis"];
							$totals["$cov"]["trans"] += $d["numTrans"];
							$totals["$cov"]["cisDiseaseLoci"]   += $dDiseaseLoci["numCisDiseaseLoci"];
							$totals["$cov"]["transDiseaseLoci"] += $dDiseaseLoci["numTransDiseaseLoci"];
						}
					}
				}
				echo "</tr>\n";
			}
			echo "<tr><td colspan=\"".(1+(1+2)*count($qtl_covariates))."\" bgcolor=\"black\"></td></tr>\n";
			echo "<tr><td align=center>Totals</td>";
			foreach ($qtl_covariates as $cov) {
				if ("" == "$cov") $cov="none";
				echo "<td></td>";
				echo "<td align=right>".$totals["$cov"]["cis"]  ." (".$totals["$cov"]["cisDiseaseLoci"]  .")"."</td>";
				echo "<td align=right>".$totals["$cov"]["trans"]." (".$totals["$cov"]["transDiseaseLoci"].")"."</td>";
			}
			echo "</tr>\n";
			echo "<tr><td colspan=\"".(1+(1+2)*count($qtl_covariates))."\" bgcolor=\"black\"></td></tr>\n";
			echo "<caption align=bottom>The table shows the number of cis- and trans-regulated genes for every chromosome (rows) for a selection of covariates (column pairs).";
			if (!empty($PvalueMin) or !empty($LODmin))
			echo " Expression QTL were selected to have ";
			$numStatements=0;
			if (!empty($PvalueMin)) {
				if (0<$numStatements) echo ", ";
				echo " a P-value above $PvalueMin";
				$numStatements++;
			}
			if (!empty($PvalueMax)) {
				if (0<$numStatements) echo ", ";
				echo " a P-value below $PvalueMax";
				$numStatements++;
			}
			if (!empty($LODmin)) {
				if (0<$numStatements) echo ", ";
				echo "a LOD score above $LODmin";
				$numStatements++;
			}
			if (!empty($LODmax)) {
				if (0<$numStatements) echo ", ";
				echo "a LOD score below $LODmax";
				$numStatements++;
			}
			echo ". Numbers in parentheses refer to the subset of traits controlled by loci in classical QTL";
			if (!empty($cqtl)) {
				echo " (".join(", ",$cqtl).")";
			}
			echo ".";
			echo "</caption>";
			echo "</table>";
		}
		mysqli_free_result($result);
	}
	include("footer.php");
?>
