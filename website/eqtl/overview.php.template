<?php

	TEMPLATEWARNINGHASH

/*

=head1 overview

This script prepares a tabular overview on

=over 4

=item covariates

=item chromosomes

=item cis/trans

=item location in classical disease qtl

=back

The figure is prepared in a way that would be suitable for publication.


=head1 AUTHORS

Steffen ME<ouml>ller <moeller@inb.uni-luebeck.de>,
Melanie Theussen-Hedreul

=head1 COPYRIGHT

University of LE<uuml>beck, 2009

=cut

*/

	require_once("header.php");
	require_once("func_covariates.php");
	require_once("func_selection.php"); // prints part of the HTML for forms

	show_small_header("Tabular overview on Expression QTL",TRUE);

	$database="DATABASEEQTLNAME";
	include_once("func_connect.php");
	require_once("func_public_qtl.php");

	# fields that should appear
	$dataSelectionFieldsQTL = array(
		"groups",
		"Chromosome","ensemblversion",
		"cM_within","LODmax","LODmin",
		"quantilemin","quantilemax",
		"qtl_covariates",
		"cqtl",
		"LODdiffmin","LODdiffmax",
		"PvalueMin","PvalueMax",
		"cM_Peak_Min","cM_Peak_Max",
		"MeanMin","MeanMax","SdMin","SdMax",
		"locus","chrlist", "condition"
	);



	$accessible_fields_in_POST_or_GET = array_merge (
		array("submitted"),
		$dataSelectionFieldsQTL
	);

	foreach($accessible_fields_in_POST_or_GET as $vname)
	{
		if (isset($_POST[$vname])) {
			$$vname = $_POST[$vname];
			if (isset($_POST["debug"]) or isset($_GET["debug"])) {
				echo $vname."=".$$vname."\t";
			}
		}
		elseif(isset($_GET[$vname])) {
			$$vname = $_GET[$vname];
			if (isset($_POST["debug"]) or isset($_GET["debug"])) {
				echo $vname."=".$$vname."\t";
			}
		}
	}



	if (empty($submitted)) {

		#
		#   S E T T I N G  O F  P A R A M E T E R S 
		#

		echo "<form action=overview.php method=post>\n";
		echo "<input type=hidden name=submitted value=1>\n";

		echo "<table><tr>"; # the table has only a single row

		echo "<td valign=top>"; # entry of typical filter attributes - left hand side

		echo "<table>\n";
		print_selection_form("table_overview_scanone");
		echo "<tr><th>Covariates of stored QTL</th><td>";
		select_covariates_combinations();
		echo "<tr><td>&nbsp;</td><td></td></tr>\n";
		echo "<tr><td align=right><input type=submit></td><td align=left><input type=reset></td></tr>\n";
		echo "</table>\n";

		echo "</td>\n<td valign=top>";
		select_from_public_qtls($linkLocal,TRUE);
		echo "</td>";
		echo "</tr>";
		echo "</table>";

		echo "</form>\n";

	}
	else {

		#
		#   P R E P A R A T I O N  O F  T A B L E
		#

		if (empty($qtl_covariates) or 0 == count($qtl_covariates)) {
			echo "<p>No list of covariate combinations offered, falling back to default list.</p>\n";
			$qtl_covariates = array("","eae_add","eae_int","dud_int");
		}

		$where = "WHERE";

		if (!empty($qtl_covariates)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " covariates in ('".join("','",$qtl_covariates)."') ";
		}

		if (!empty($PvalueMin)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " qtl.pvalue >= $PvalueMin ";
		}
		if (!empty($PvalueMax)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " qtl.pvalue <= $PvalueMax ";
		}

		if (!empty($LODmin)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " qtl.LOD >= $LODmin ";
		}
		if (!empty($LODmax)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " qtl.LOD <= $LODmax ";
		}
		if (!empty($MeanMin)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " trait.mean >= $MeanMin ";
		}
		if (!empty($MeanMax)) {
			if ("WHERE" != "$where") $where .= " AND ";
			$where .= " trait.mean <= $MeanMax ";
		}

		$query = "SELECT covariates,locus.chr,count(*) as numTraits,sum(cis) as numCis "
			." FROM qtl join locus on qtl.Locus = locus.Name ";
		if (!empty($MeanMax) or !empty($MeanMin)) {
			 $query .= " join trait on qtl.Trait = trait_id ";
		}
		if ("WHERE" != "$where") $query .= " $where ";
		$query .= " GROUP BY covariates,locus.chr ";

		// echo "<p>Query All:"; print_r($query); echo "</p>\n";

		$result = mysql_query($query,$linkLocal);
		if (empty($result)) {
			errorMessage(mysql_error($linkLocal)."</p><p>".$query."</p>");
			//echo "LinkLocal: "; print_r($linkLocal);
			mysql_close($linkLocal);
			exit;
		}

		$dataFromTable = array();
		while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
			if (empty($dataFromTable[$line["covariates"]])) {
				$dataFromTable[$line["covariates"]] = array();
			}
			$dataFromTable[$line["covariates"]][$line["chr"]]=array(
							"numTraits"=>$line["numTraits"],
							"numCis"=>$line["numCis"],
							"numTrans"=>($line["numTraits"]-$line["numCis"]));
		}

		// print_r($dataFromTable);

	                                                        
		$queryDiseaseLoci = "SELECT covariates,locus.chr,count(distinct qtl.Trait) as numTraits"
                                // will return number of traits + 1 (for the 0)
			. ",count(distinct IF(1=cis,qtl.Trait,0)) as numCis "
			. ",count(distinct IF(0=cis,qtl.Trait,0)) as numTrans "
			." FROM qtl join locus on qtl.Locus = locus.Name join qtl.eae_qtl as classicalQTL ";
		if (!empty($MeanMax) or !empty($MeanMin)) {
			$queryDiseaseLoci .= " join trait on qtl.Trait = trait_id ";
		}		

		if ("WHERE" != "$where") $where .= " AND ";
		$where .=     " locus.Mbp IS NOT NULL ";
		$where .= " AND classicalQTL.species='ENSEMBLSPECIESSEARCHURL' ";
		$where .= " AND locus.chr = classicalQTL.chr ";
		$where .= " AND locus.Mbp*1000*1000 >= classicalQTL.start_bps
			    AND locus.Mbp*1000*1000 <= classicalQTL.stop_bps ";
		if (!empty($cqtl)) {
			$where .= " AND classicalQTL.name in ('".join("','",$cqtl)."') ";
		}

		if ("WHERE" != "$where") $queryDiseaseLoci .= " $where ";
		$queryDiseaseLoci .= " GROUP BY covariates,locus.chr ";

		echo "<p>cqtl: "; print_r($cqtl); echo "</p>\n";
		echo "<p>Query DiseaseLoci:"; print_r($queryDiseaseLoci); echo "</p>\n";

		$result = mysql_query($queryDiseaseLoci,$linkLocal);
		if (empty($result)) {
			errorMessage(mysql_error($linkLocal)."</p><p>".$queryDiseaseLoci."</p>");
			//echo "LinkLocal: "; print_r($linkLocal);
			mysql_close($linkLocal);
			exit;
		}

		$dataFromTableDiseaseLoci = array();
		while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
			if (empty($dataFromTableDiseaseLoci[$line["covariates"]])) {
				$dataFromTableDiseaseLoci[$line["covariates"]] = array();
			}
			$dataFromTableDiseaseLoci[$line["covariates"]][$line["chr"]]=array(
							"numTraitsDiseaseLoci"=>$line["numTraits"],
							"numCisDiseaseLoci"=>$line["numCis"],
							"numTransDiseaseLoci"=>$line["numTrans"]);
			if ($dataFromTableDiseaseLoci[$line["covariates"]]["numTraitsDiseaseLoci"]
				== $dataFromTableDiseaseLoci[$line["covariates"]]["numTransDiseaseLoci"]) {

				if (1 == $dataFromTableDiseaseLoci[$line["covariates"]]["numCisDiseaseLoci"]) {
					# Exception, the number shown for 'trans' is correct, don't change it later
					$dataFromTableDiseaseLoci[$line["covariates"]]["numTransDiseaseLoci"]++ ;
				}

			}
			else if ($dataFromTableDiseaseLoci[$line["covariates"]]["numTraitsDiseaseLoci"]
				== $dataFromTableDiseaseLoci[$line["covariates"]]["numCisDiseaseLoci"]) {

				if (1 == $dataFromTableDiseaseLoci[$line["covariates"]]["numTransDiseaseLoci"]) {
					# Exception, the number shown for 'trans' is correct, don't change it later
					$dataFromTableDiseaseLoci[$line["covariates"]]["numCisDiseaseLoci"]++ ;
				}
			}

			# correct for "0" that is shown because of imperfectionism
			$dataFromTableDiseaseLoci[$line["covariates"]]["numTransDiseaseLoci"]-- ;
			$dataFromTableDiseaseLoci[$line["covariates"]]["numCisDiseaseLoci"]-- ;
		}

		// print_r($dataFromTableDiseaseLoci);

		#
		# P R I N T   T A B L E
		#

		$orderOfChromosomes = list_chromosomes();

		echo "<table border=0 cellspacing=2>";
		//echo "<colgroup>"; # chr
		echo "<tr><td colspan=\"".(1+(1+2)*count($qtl_covariates))."\" bgcolor=\"black\"></td></tr>\n";
		echo "<tr>";
		echo "<td rowspan=2 valign=top align=right></td>";
		foreach ($qtl_covariates as $cov) {
			//echo "<colgroup span=2 cellspacing=10>"; # respective cov
			echo "<td>&nbsp;</td><td colspan=2 align=center>"
				.(empty($cov)?"transcript":preg_replace("/,/"," ",displayCovariates($cov)))
			    ."</td>";
		}
		echo "</tr>\n<tr>";
		$totals=array();
		foreach ($qtl_covariates as $cov) {
			$totals[$cov]=array("cis"=>0,"trans"=>0);
			echo "<td></td><td bgcolor=\"black\" colspan=2></td>";
		}
		echo "</tr>\n<tr>";
		echo "<td align=left valign=bottom>Chromosome</td>";
		foreach ($qtl_covariates as $cov) {
			echo "<td></td><td align=right>cis</td><td align=right>trans</td>";
		}
		echo "</tr>\n";
		/* -- a solid line is correct
		echo <tr>";
		echo "<td bgcolor=\"black\"></td>";
		foreach ($qtl_covariates as $cov) {
			echo "<td></td>";
			echo "<td bgcolor=\"black\"></td>";
			echo "<td bgcolor=\"black\"></td>";
		}
		echo "</tr>\n";
		*/
		echo "<tr><td colspan=\"".(1+(1+2)*count($qtl_covariates))."\" bgcolor=\"black\"></td></tr>\n";
		foreach ($orderOfChromosomes as $c) {
			echo "<tr>";
			echo "<td align=right>$c&nbsp;&nbsp;&nbsp;&nbsp;</td>";
			foreach ($qtl_covariates as $cov) {
				$d=$dataFromTable[$cov][$c];
				$dDiseaseLoci=$dataFromTableDiseaseLoci[$cov][$c];
				if (empty($d)) {
					echo "<td colspan=3>";
					if (!empty($dDiseaseLoci)) {
						echo "<small>Problem!</small>";
					}
					echo "</td>";
				}
				else {
					echo "<td></td>";
					echo "<td align=right>".$d["numCis"]
						.($dDiseaseLoci["numCisDiseaseLoci"]?(" (".$dDiseaseLoci["numCisDiseaseLoci"].")"):"")."</td>";
					echo "<td align=right>".$d["numTrans"]
						.($dDiseaseLoci["numTransDiseaseLoci"]?(" (".$dDiseaseLoci["numTransDiseaseLoci"].")"):"")."</td>";
					$totals[$cov]["cis"]   += $d["numCis"];
					$totals[$cov]["trans"] += $d["numTrans"];
					$totals[$cov]["cisDiseaseLoci"]   += $dDiseaseLoci["numCisDiseaseLoci"];
					$totals[$cov]["transDiseaseLoci"] += $dDiseaseLoci["numTransDiseaseLoci"];
				}
			}
			echo "</tr>\n";
		}
		echo "<tr><td colspan=\"".(1+(1+2)*count($qtl_covariates))."\" bgcolor=\"black\"></td></tr>\n";
		echo "<tr><td align=center>Totals</td>";
		foreach ($qtl_covariates as $cov) {
			echo "<td></td>";
			echo "<td align=right>".$totals[$cov]["cis"]  ." (".$totals[$cov]["cisDiseaseLoci"]  .")"."</td>";
			echo "<td align=right>".$totals[$cov]["trans"]." (".$totals[$cov]["transDiseaseLoci"].")"."</td>";
		}
		echo "</tr>\n";
		echo "<tr><td colspan=\"".(1+(1+2)*count($qtl_covariates))."\" bgcolor=\"black\"></td></tr>\n";
		echo "<caption align=bottom>The table shows the number of cis- and trans-regulated genes for every chromosome (rows) for a selection of covariates (column pairs).";
		if (!empty($PvalueMin) or !empty($LODmin))
		echo " Expression QTL were selected to have ";
		$numStatements=0;
		if (!empty($PvalueMin)) {
			if (0<$numStatements) echo ", ";
			echo " a P-value above $PvalueMin";
			$numStatements++;
		}
		if (!empty($PvalueMax)) {
			if (0<$numStatements) echo ", ";
			echo " a P-value below $PvalueMax";
			$numStatements++;
		}
		if (!empty($LODmin)) {
			if (0<$numStatements) echo ", ";
			echo "a LOD score above $LODmin";
			$numStatements++;
		}
		if (!empty($LODmax)) {
			if (0<$numStatements) echo ", ";
			echo "a LOD score below $LODmax";
			$numStatements++;
		}
		echo ". Numbers in parentheses refer to the subset of traits controlled by loci in classical QTL";
		if (!empty($cqtl)) {
			echo " (".join(", ",$cqtl).")";
		}
		echo ".";
		echo "</caption>";
		echo "</table>";
	}
	include("footer.php");
?>